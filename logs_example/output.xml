<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.9.5 on win32)" generated="20220120 10:44:23.995" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="D:\DEV\robotframework-eggplant\tests">
<suite id="s1-s1" name="Tests" source="D:\DEV\robotframework-eggplant\tests\tests">
<suite id="s1-s1-s1" name="Comments" source="D:\DEV\robotframework-eggplant\tests\tests\Comments.robot">
<kw name="Open Session" library="EggplantLibrary" type="SETUP">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:44:24.492" level="INFO">Send command to eggPlant server: 'if EggplantVersion().eggplant &lt; "21.1.0" then LogWarning !"Incompatible eggplant version detected - [[EggplantVersion().eggplant]]. Min. version required - 21.1.0. See README for more information."'</msg>
<msg timestamp="20220120 10:44:24.531" level="INFO">Execution duration: 0.000999927521</msg>
<msg timestamp="20220120 10:44:24.531" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:24.531" level="INFO" html="true"/>
<msg timestamp="20220120 10:44:24.531" level="INFO">Return value: {'Duration': 0.006999969482, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/SomeSubmodule/OneMoreSubSubmodule/echo/20220119_141716.776/LogFile.txt', 'ReturnValue': 'hello', 'RunDate': &lt;DateTime '20220119T14:17:16' at 0x2ceaa125bb0&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<status status="PASS" starttime="20220120 10:44:24.436" endtime="20220120 10:44:24.531"/>
</kw>
<test id="s1-s1-s1-t1" name="Comments and params">
<kw name="Empty Comments And Params" library="EggplantLibrary">
<arg>Hello world</arg>
<msg timestamp="20220120 10:44:24.532" level="INFO">Send command to eggPlant server: 'RunWithNewResults "emptyCommentsAndParams", "Hello world",'</msg>
<msg timestamp="20220120 10:44:24.911" level="INFO">Execution duration: 0.350999951363</msg>
<msg timestamp="20220120 10:44:24.911" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:24.911" level="INFO" html="true">20.01.22, 09:44:24	START		Running emptyCommentsAndParams.script
20.01.22, 09:44:24	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:44:24 +0000", Successes:"1", TestCase:"emptyCommentsAndParams.script", Warnings:"0")
20.01.22, 09:44:24	SUCCESS		Execution Time 0:00:00 emptyCommentsAndParams.script
</msg>
<msg timestamp="20220120 10:44:24.912" level="INFO">Return value: </msg>
<status status="PASS" starttime="20220120 10:44:24.532" endtime="20220120 10:44:24.912"/>
</kw>
<status status="PASS" starttime="20220120 10:44:24.532" endtime="20220120 10:44:24.912"/>
</test>
<test id="s1-s1-s1-t2" name="Deprecating">
<kw name="Deprecated Keyword" library="EggplantLibrary">
<doc>*DEPRECATED!* - use `listParams` instead
This keyword is deprecated - so RF log should contain a warning about it</doc>
<msg timestamp="20220120 10:44:24.915" level="WARN">Keyword 'EggplantLibrary.Deprecated Keyword' is deprecated. - use `listParams` instead
This keyword is deprecated - so RF log should contain a warning about it</msg>
<msg timestamp="20220120 10:44:24.916" level="INFO">Send command to eggPlant server: 'RunWithNewResults "deprecatedKeyword",'</msg>
<msg timestamp="20220120 10:44:25.086" level="INFO">Execution duration: 0.15499997139</msg>
<msg timestamp="20220120 10:44:25.086" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:25.086" level="INFO" html="true">20.01.22, 09:44:24	START		Running deprecatedKeyword.script
20.01.22, 09:44:24	Log		hello world
20.01.22, 09:44:24	EndTestCase		(Duration:"0.004", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:44:24 +0000", Successes:"1", TestCase:"deprecatedKeyword.script", Warnings:"0")
20.01.22, 09:44:25	SUCCESS		Execution Time 0:00:00 deprecatedKeyword.script
</msg>
<msg timestamp="20220120 10:44:25.086" level="INFO">Return value: </msg>
<status status="PASS" starttime="20220120 10:44:24.915" endtime="20220120 10:44:25.086"/>
</kw>
<doc>WARNING is expected! Calling a deprecated keyword should make RF give it.</doc>
<status status="PASS" starttime="20220120 10:44:24.914" endtime="20220120 10:44:25.087"/>
</test>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:44:25.088" endtime="20220120 10:44:25.103"/>
</kw>
<status status="PASS" starttime="20220120 10:44:24.028" endtime="20220120 10:44:25.103"/>
</suite>
<suite id="s1-s1-s2" name="Connection" source="D:\DEV\robotframework-eggplant\tests\tests\Connection.robot">
<test id="s1-s1-s2-t1" name="Connect to eggDrive">
<kw name="Set Eggdrive Connection" library="EggplantLibrary">
<arg>host=http://localhost</arg>
<arg>port=5400</arg>
<doc>Defines connection to running instance of eggPlant in the eggDrive mode
(XML RPC Server).</doc>
<status status="PASS" starttime="20220120 10:44:25.112" endtime="20220120 10:44:25.114"/>
</kw>
<kw name="Open Session" library="EggplantLibrary">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:44:27.220" level="INFO">Send command to eggPlant server: 'if EggplantVersion().eggplant &lt; "21.1.0" then LogWarning !"Incompatible eggplant version detected - [[EggplantVersion().eggplant]]. Min. version required - 21.1.0. See README for more information."'</msg>
<msg timestamp="20220120 10:44:29.271" level="INFO">Execution duration: 0.00100004673</msg>
<msg timestamp="20220120 10:44:29.271" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:29.271" level="INFO" html="true"/>
<msg timestamp="20220120 10:44:29.271" level="INFO">Return value: {'Duration': 0.009999990463, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/deprecatedKeyword/20220120_094424.975/LogFile.txt', 'ReturnValue': '', 'RunDate': &lt;DateTime '20220120T09:44:24' at 0x2ceaa163850&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<status status="PASS" starttime="20220120 10:44:25.115" endtime="20220120 10:44:29.271"/>
</kw>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:44:29.272" endtime="20220120 10:44:31.317"/>
</kw>
<status status="PASS" starttime="20220120 10:44:25.111" endtime="20220120 10:44:31.317"/>
</test>
<test id="s1-s1-s2-t2" name="Session BUSY - error if not closed properly">
<kw name="Open Session" library="EggplantLibrary">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<status status="PASS" starttime="20220120 10:44:31.319" endtime="20220120 10:44:33.411"/>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*BUSY: Session in progress*</arg>
<arg>Open session</arg>
<arg>close_previously_open_session=${FALSE}</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Open Session" library="EggplantLibrary">
<arg>close_previously_open_session=${FALSE}</arg>
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:44:35.473" level="FAIL">Fault: &lt;Fault 2: 'BUSY: Session in progress'&gt;</msg>
<status status="FAIL" starttime="20220120 10:44:33.412" endtime="20220120 10:44:35.474"/>
</kw>
<status status="PASS" starttime="20220120 10:44:33.411" endtime="20220120 10:44:35.474"/>
</kw>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:44:35.475" endtime="20220120 10:44:37.523"/>
</kw>
<status status="PASS" starttime="20220120 10:44:31.319" endtime="20220120 10:44:37.523"/>
</test>
<test id="s1-s1-s2-t3" name="Session BUSY - close automatically">
<kw name="Open Session" library="EggplantLibrary">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<status status="PASS" starttime="20220120 10:44:37.526" endtime="20220120 10:44:39.607"/>
</kw>
<kw name="Open Session" library="EggplantLibrary">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:44:41.658" level="INFO">Old session busy - close it automatically</msg>
<status status="PASS" starttime="20220120 10:44:39.607" endtime="20220120 10:44:45.801"/>
</kw>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:44:45.802" endtime="20220120 10:44:47.859"/>
</kw>
<status status="PASS" starttime="20220120 10:44:37.525" endtime="20220120 10:44:47.860"/>
</test>
<status status="PASS" starttime="20220120 10:44:25.105" endtime="20220120 10:44:47.861"/>
</suite>
<suite id="s1-s1-s3" name="DebugInfo" source="D:\DEV\robotframework-eggplant\tests\tests\DebugInfo.robot">
<kw name="Open Session" library="EggplantLibrary" type="SETUP">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:44:47.924" level="INFO">Send command to eggPlant server: 'if EggplantVersion().eggplant &lt; "21.1.0" then LogWarning !"Incompatible eggplant version detected - [[EggplantVersion().eggplant]]. Min. version required - 21.1.0. See README for more information."'</msg>
<msg timestamp="20220120 10:44:47.965" level="INFO">Execution duration: 0.00100004673</msg>
<msg timestamp="20220120 10:44:47.965" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:47.965" level="INFO" html="true"/>
<msg timestamp="20220120 10:44:47.965" level="INFO">Return value: {'Duration': 0.009999990463, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/deprecatedKeyword/20220120_094424.975/LogFile.txt', 'ReturnValue': '', 'RunDate': &lt;DateTime '20220120T09:44:24' at 0x2cea9fadaf0&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<status status="PASS" starttime="20220120 10:44:47.869" endtime="20220120 10:44:47.965"/>
</kw>
<test id="s1-s1-s3-t1" name="OCR ReadText - full screen">
<kw name="Connect Screenshot SUT" library="common" type="SETUP">
<kw name="Connect Sut" library="EggplantLibrary">
<arg>{Type:"screenshot", name:"${SUT screenshot file}"}</arg>
<doc>Opens a VNC or RDP connection with a SUT / makes it the active connection.</doc>
<msg timestamp="20220120 10:44:47.967" level="INFO">Send command to eggPlant server: 'connect {Type:"screenshot", name:"D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png"}'</msg>
<msg timestamp="20220120 10:44:48.158" level="INFO">Execution duration: 0.164000034332</msg>
<msg timestamp="20220120 10:44:48.158" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:48.158" level="INFO" html="true">20.01.22, 09:44:48	connect		D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png:(null)
</msg>
<msg timestamp="20220120 10:44:48.158" level="INFO">Return value: {'Duration': 0.009999990463, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/deprecatedKeyword/20220120_094424.975/LogFile.txt', 'ReturnValue': '', 'RunDate': &lt;DateTime '20220120T09:44:24' at 0x2ceaa148d30&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<status status="PASS" starttime="20220120 10:44:47.966" endtime="20220120 10:44:48.158"/>
</kw>
<status status="PASS" starttime="20220120 10:44:47.966" endtime="20220120 10:44:48.158"/>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>${ImageRect error msg - full screen}</arg>
<arg>OCR Click Imagerectangle With Text</arg>
<arg>${MyText}</arg>
<arg>${Empty}</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Ocr Click Imagerectangle With Text" library="EggplantLibrary">
<arg>${MyText}</arg>
<arg>${Empty}</arg>
<doc>Looks for a specified text using OCR and performs a mouse click.
The optional parameter 'searchRect' defines the search rectangle. The full screen is used by default</doc>
<msg timestamp="20220120 10:44:48.160" level="INFO">Send command to eggPlant server: 'RunWithNewResults "ocrClickImagerectangleWithText", "This text will be never found", "",'</msg>
<msg timestamp="20220120 10:44:50.929" level="INFO">Execution duration: 2.728999972343</msg>
<msg timestamp="20220120 10:44:50.929" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:50.929" level="INFO" html="true">20.01.22, 09:44:48	START		Running ocrClickImagerectangleWithText.script
20.01.22, 09:44:50	Exception	(TEXT:"This text will be never found")	Unable To Find Image "(TEXT:"This text will be never found")". Text not found.
20.01.22, 09:44:50	EndTestCase		(Duration:"2.21", Errors:"1", Exceptions:"1", StartTime:"2022-01-20 09:44:48 +0000", Successes:"0", TestCase:"ocrClickImagerectangleWithText.script", Warnings:"0")
20.01.22, 09:44:50	FAILURE	Screen_Error.png	Image Not Found: imagerectangle Error - Unable To Find Image "(TEXT:"This text will be never found")". Text not found. -- Execution Time 0:00:02 ocrClickImagerectangleWithText.script
</msg>
<msg timestamp="20220120 10:44:50.930" level="INFO">Screenshot rectangle: Full screen</msg>
<msg timestamp="20220120 10:44:51.202" level="INFO" html="true">Screenshot: &lt;a href="Screenshots\Screenshot__2022-01-20__10_44_50__929410.png"&gt;Screenshot__2022-01-20__10_44_50__929410.png&lt;/a&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots\Screenshot__2022-01-20__10_44_50__929410.png"&gt;&lt;img src="Screenshots\Screenshot__2022-01-20__10_44_50__929410.png" height="350px"&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</msg>
<msg timestamp="20220120 10:44:51.203" level="FAIL">ocrClickImagerectangleWithText: Image Not Found -- imagerectangle Error - Unable To Find Image "(TEXT:"This text will be never found")". Text not found.</msg>
<status status="FAIL" starttime="20220120 10:44:48.159" endtime="20220120 10:44:51.203"/>
</kw>
<status status="PASS" starttime="20220120 10:44:48.159" endtime="20220120 10:44:51.203"/>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>${Click error msg - full screen}</arg>
<arg>OCR Click Text</arg>
<arg>${MyText}</arg>
<arg>${Empty}</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Ocr Click Text" library="EggplantLibrary">
<arg>${MyText}</arg>
<arg>${Empty}</arg>
<doc>Looks for a specified text using OCR and performs a mouse click.
The optional parameter 'searchRect' defines the search rectangle. The full screen is used by default</doc>
<msg timestamp="20220120 10:44:51.205" level="INFO">Send command to eggPlant server: 'RunWithNewResults "ocrClickText", "This text will be never found", "",'</msg>
<msg timestamp="20220120 10:44:53.871" level="INFO">Execution duration: 2.641999959946</msg>
<msg timestamp="20220120 10:44:53.871" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:53.871" level="INFO" html="true">20.01.22, 09:44:51	START		Running ocrClickText.script
20.01.22, 09:44:53	Exception	(TEXT:"This text will be never found")	No Text Found On Screen: "(TEXT:"This text will be never found")". Text not found.
20.01.22, 09:44:53	EndTestCase		(Duration:"2.201", Errors:"1", Exceptions:"1", StartTime:"2022-01-20 09:44:51 +0000", Successes:"0", TestCase:"ocrClickText.script", Warnings:"0")
20.01.22, 09:44:53	FAILURE	Screen_Error.png	Image Not Found: click Error - No Text Found On Screen: "(TEXT:"This text will be never found")". Text not found. -- Execution Time 0:00:02 ocrClickText.script
</msg>
<msg timestamp="20220120 10:44:53.872" level="INFO">Screenshot rectangle: Full screen</msg>
<msg timestamp="20220120 10:44:54.119" level="INFO" html="true">Screenshot: &lt;a href="Screenshots\Screenshot__2022-01-20__10_44_53__870941.png"&gt;Screenshot__2022-01-20__10_44_53__870941.png&lt;/a&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots\Screenshot__2022-01-20__10_44_53__870941.png"&gt;&lt;img src="Screenshots\Screenshot__2022-01-20__10_44_53__870941.png" height="350px"&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</msg>
<msg timestamp="20220120 10:44:54.120" level="FAIL">ocrClickText: Image Not Found -- click Error - No Text Found On Screen: "(TEXT:"This text will be never found")". Text not found.</msg>
<status status="FAIL" starttime="20220120 10:44:51.204" endtime="20220120 10:44:54.120"/>
</kw>
<status status="PASS" starttime="20220120 10:44:51.204" endtime="20220120 10:44:54.120"/>
</kw>
<status status="PASS" starttime="20220120 10:44:47.965" endtime="20220120 10:44:54.121"/>
</test>
<test id="s1-s1-s3-t2" name="OCR ReadText - restricted search rectangle">
<kw name="Connect Screenshot SUT" library="common" type="SETUP">
<kw name="Connect Sut" library="EggplantLibrary">
<arg>{Type:"screenshot", name:"${SUT screenshot file}"}</arg>
<doc>Opens a VNC or RDP connection with a SUT / makes it the active connection.</doc>
<msg timestamp="20220120 10:44:54.123" level="INFO">Send command to eggPlant server: 'connect {Type:"screenshot", name:"D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png"}'</msg>
<msg timestamp="20220120 10:44:54.138" level="INFO">Execution duration: 0.003000020981</msg>
<msg timestamp="20220120 10:44:54.138" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:54.138" level="INFO" html="true">20.01.22, 09:44:54	connect		D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png:(null)
</msg>
<msg timestamp="20220120 10:44:54.138" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_44_53__870941.png</msg>
<status status="PASS" starttime="20220120 10:44:54.123" endtime="20220120 10:44:54.138"/>
</kw>
<status status="PASS" starttime="20220120 10:44:54.123" endtime="20220120 10:44:54.138"/>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>${ImageRect error msg - restricted rect}</arg>
<arg>OCR Click Imagerectangle With Text</arg>
<arg>${MyText}</arg>
<arg>${MyRect}</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Ocr Click Imagerectangle With Text" library="EggplantLibrary">
<arg>${MyText}</arg>
<arg>${MyRect}</arg>
<doc>Looks for a specified text using OCR and performs a mouse click.
The optional parameter 'searchRect' defines the search rectangle. The full screen is used by default</doc>
<msg timestamp="20220120 10:44:54.140" level="INFO">Send command to eggPlant server: 'RunWithNewResults "ocrClickImagerectangleWithText", "This text will be never found", ((0,300),(200,500)),'</msg>
<msg timestamp="20220120 10:44:55.648" level="INFO">Execution duration: 1.478000044823</msg>
<msg timestamp="20220120 10:44:55.648" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:55.648" level="INFO" html="true">20.01.22, 09:44:54	START		Running ocrClickImagerectangleWithText.script
20.01.22, 09:44:55	Exception	(TEXT:"This text will be never found")	Unable To Find Image "(TEXT:"This text will be never found")". Text not found.
20.01.22, 09:44:55	EndTestCase		(Duration:"1.093", Errors:"1", Exceptions:"1", StartTime:"2022-01-20 09:44:54 +0000", Successes:"0", TestCase:"ocrClickImagerectangleWithText.script", Warnings:"0")
20.01.22, 09:44:55	FAILURE	Screen_Error.png	Image Not Found: imagerectangle Error - Unable To Find Image "(TEXT:"This text will be never found")". Text not found.  Restricted Search Rectangle ((0,300),(200,500))
 -- Execution Time 0:00:01 ocrClickImagerectangleWithText.script
</msg>
<msg timestamp="20220120 10:44:55.648" level="INFO">----&gt; Performing OCR ReadText in the restricted search rectangle: ((0,300),(200,500)).
For results see the command output further in the log.
-----
</msg>
<msg timestamp="20220120 10:44:55.648" level="INFO">Send command to eggPlant server: 'log ReadText((0,300),(200,500))'</msg>
<msg timestamp="20220120 10:44:55.703" level="INFO">Execution duration: 0.019999980927</msg>
<msg timestamp="20220120 10:44:55.703" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:55.703" level="INFO" html="true">20.01.22, 09:44:55	readtext		(0,300,200,500)
20.01.22, 09:44:55	Log		
</msg>
<msg timestamp="20220120 10:44:55.703" level="INFO">Return value: {'Duration': 1.099000096321, 'ErrorMessage': 'Image Not Found -- imagerectangle Error - Unable To Find Image "(TEXT:"This text will be never found")". Text not found.  Restricted Search Rectangle ((0,300),(200,500))\n', 'Errors': 1.0, 'Exceptions': 1.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/ocrClickImagerectangleWithText/20220120_094454.282/LogFile.txt', 'ReturnValue': '', 'RunDate': &lt;DateTime '20220120T09:44:54' at 0x2ceaa1bad90&gt;, 'Status': 'Failure', 'Successes': 0.0, 'Warnings': 0.0}</msg>
<msg timestamp="20220120 10:44:55.703" level="INFO">Screenshot rectangle: Full screen</msg>
<msg timestamp="20220120 10:44:55.917" level="INFO">((0,300),(200,500))</msg>
<msg timestamp="20220120 10:44:56.135" level="INFO" html="true">Screenshot: &lt;a href="Screenshots\Screenshot__2022-01-20__10_44_55__702747.png"&gt;Screenshot__2022-01-20__10_44_55__702747.png&lt;/a&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots\Screenshot__2022-01-20__10_44_55__702747.png"&gt;&lt;img src="Screenshots\Screenshot__2022-01-20__10_44_55__702747.png" height="350px"&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</msg>
<msg timestamp="20220120 10:44:56.135" level="FAIL">ocrClickImagerectangleWithText: Image Not Found -- imagerectangle Error - Unable To Find Image "(TEXT:"This text will be never found")". Text not found.  Restricted Search Rectangle ((0,300),(200,500))
</msg>
<status status="FAIL" starttime="20220120 10:44:54.140" endtime="20220120 10:44:56.135"/>
</kw>
<status status="PASS" starttime="20220120 10:44:54.140" endtime="20220120 10:44:56.136"/>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>${Click error msg - restricted rect}</arg>
<arg>OCR Click Text</arg>
<arg>${MyText}</arg>
<arg>${MyRect}</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Ocr Click Text" library="EggplantLibrary">
<arg>${MyText}</arg>
<arg>${MyRect}</arg>
<doc>Looks for a specified text using OCR and performs a mouse click.
The optional parameter 'searchRect' defines the search rectangle. The full screen is used by default</doc>
<msg timestamp="20220120 10:44:56.137" level="INFO">Send command to eggPlant server: 'RunWithNewResults "ocrClickText", "This text will be never found", ((0,300),(200,500)),'</msg>
<msg timestamp="20220120 10:44:57.543" level="INFO">Execution duration: 1.398999929428</msg>
<msg timestamp="20220120 10:44:57.543" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:57.543" level="INFO" html="true">20.01.22, 09:44:56	START		Running ocrClickText.script
20.01.22, 09:44:57	Exception	(TEXT:"This text will be never found")	No Text Found On Screen: "(TEXT:"This text will be never found")". Text not found.
20.01.22, 09:44:57	EndTestCase		(Duration:"1.07", Errors:"1", Exceptions:"1", StartTime:"2022-01-20 09:44:56 +0000", Successes:"0", TestCase:"ocrClickText.script", Warnings:"0")
20.01.22, 09:44:57	FAILURE	Screen_Error.png	Image Not Found: click Error - No Text Found On Screen: "(TEXT:"This text will be never found")". Text not found.  Restricted Search Rectangle ((0,300),(200,500))
 -- Execution Time 0:00:01 ocrClickText.script
</msg>
<msg timestamp="20220120 10:44:57.543" level="INFO">----&gt; Performing OCR ReadText in the restricted search rectangle: ((0,300),(200,500)).
For results see the command output further in the log.
-----
</msg>
<msg timestamp="20220120 10:44:57.543" level="INFO">Send command to eggPlant server: 'log ReadText((0,300),(200,500))'</msg>
<msg timestamp="20220120 10:44:58.020" level="INFO">Execution duration: 0.43800008297</msg>
<msg timestamp="20220120 10:44:58.020" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:58.020" level="INFO" html="true">20.01.22, 09:44:58	readtext		(0,300,200,500)
20.01.22, 09:44:58	Log		
</msg>
<msg timestamp="20220120 10:44:58.020" level="INFO">Return value: {'Duration': 1.075999975204, 'ErrorMessage': 'Image Not Found -- click Error - No Text Found On Screen: "(TEXT:"This text will be never found")". Text not found.  Restricted Search Rectangle ((0,300),(200,500))\n', 'Errors': 1.0, 'Exceptions': 1.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/ocrClickText/20220120_094456.222/LogFile.txt', 'ReturnValue': '', 'RunDate': &lt;DateTime '20220120T09:44:56' at 0x2ceaa1ba3a0&gt;, 'Status': 'Failure', 'Successes': 0.0, 'Warnings': 0.0}</msg>
<msg timestamp="20220120 10:44:58.021" level="INFO">Screenshot rectangle: Full screen</msg>
<msg timestamp="20220120 10:44:58.267" level="INFO">((0,300),(200,500))</msg>
<msg timestamp="20220120 10:44:58.465" level="INFO" html="true">Screenshot: &lt;a href="Screenshots\Screenshot__2022-01-20__10_44_58__019567.png"&gt;Screenshot__2022-01-20__10_44_58__019567.png&lt;/a&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots\Screenshot__2022-01-20__10_44_58__019567.png"&gt;&lt;img src="Screenshots\Screenshot__2022-01-20__10_44_58__019567.png" height="350px"&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</msg>
<msg timestamp="20220120 10:44:58.466" level="FAIL">ocrClickText: Image Not Found -- click Error - No Text Found On Screen: "(TEXT:"This text will be never found")". Text not found.  Restricted Search Rectangle ((0,300),(200,500))
</msg>
<status status="FAIL" starttime="20220120 10:44:56.137" endtime="20220120 10:44:58.466"/>
</kw>
<status status="PASS" starttime="20220120 10:44:56.136" endtime="20220120 10:44:58.466"/>
</kw>
<status status="PASS" starttime="20220120 10:44:54.122" endtime="20220120 10:44:58.467"/>
</test>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:44:58.468" endtime="20220120 10:44:58.476"/>
</kw>
<status status="PASS" starttime="20220120 10:44:47.863" endtime="20220120 10:44:58.476"/>
</suite>
<suite id="s1-s1-s4" name="Errors" source="D:\DEV\robotframework-eggplant\tests\tests\Errors.robot">
<kw name="Open Session" library="EggplantLibrary" type="SETUP">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:44:58.545" level="INFO">Send command to eggPlant server: 'if EggplantVersion().eggplant &lt; "21.1.0" then LogWarning !"Incompatible eggplant version detected - [[EggplantVersion().eggplant]]. Min. version required - 21.1.0. See README for more information."'</msg>
<msg timestamp="20220120 10:44:58.578" level="INFO">Execution duration: 0.0</msg>
<msg timestamp="20220120 10:44:58.578" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:58.578" level="INFO" html="true"/>
<msg timestamp="20220120 10:44:58.578" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_44_58__019567.png</msg>
<status status="PASS" starttime="20220120 10:44:58.483" endtime="20220120 10:44:58.578"/>
</kw>
<test id="s1-s1-s4-t1" name="Test with failing keyword">
<kw name="Connect Screenshot SUT" library="common" type="SETUP">
<kw name="Connect Sut" library="EggplantLibrary">
<arg>{Type:"screenshot", name:"${SUT screenshot file}"}</arg>
<doc>Opens a VNC or RDP connection with a SUT / makes it the active connection.</doc>
<msg timestamp="20220120 10:44:58.579" level="INFO">Send command to eggPlant server: 'connect {Type:"screenshot", name:"D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png"}'</msg>
<msg timestamp="20220120 10:44:58.595" level="INFO">Execution duration: 0.00200009346</msg>
<msg timestamp="20220120 10:44:58.596" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:58.596" level="INFO" html="true">20.01.22, 09:44:58	connect		D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png:(null)
</msg>
<msg timestamp="20220120 10:44:58.596" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_44_58__019567.png</msg>
<status status="PASS" starttime="20220120 10:44:58.579" endtime="20220120 10:44:58.596"/>
</kw>
<status status="PASS" starttime="20220120 10:44:58.578" endtime="20220120 10:44:58.596"/>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>${error1}</arg>
<arg>Check Input In Notepad</arg>
<arg>${wrongExpectedText1}</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Check Input In Notepad" library="EggplantLibrary">
<arg>${wrongExpectedText1}</arg>
<tag>regression</tag>
<tag>smoke</tag>
<msg timestamp="20220120 10:44:58.597" level="INFO">Send command to eggPlant server: 'RunWithNewResults "checkInputInNotepad", "Wrong Test",'</msg>
<msg timestamp="20220120 10:44:59.536" level="INFO">Execution duration: 0.910999894142</msg>
<msg timestamp="20220120 10:44:59.536" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:59.536" level="INFO" html="true">20.01.22, 09:44:58	START		Running checkInputInNotepad.script
20.01.22, 09:44:59	readtext		(46,257)
20.01.22, 09:44:59	EndTestCase		(Duration:"0.231", Errors:"1", Exceptions:"0", StartTime:"2022-01-20 09:44:58 +0000", Successes:"0", TestCase:"checkInputInNotepad.script", Warnings:"0")
20.01.22, 09:44:59	FAILURE	Screen_Error.png	AssertionFailed:  (assertion: actual=expected; actually: Hello World IS NOT equal to Wrong Test) -- Execution Time 0:00:00 checkInputInNotepad.script
</msg>
<msg timestamp="20220120 10:44:59.537" level="INFO">Screenshot rectangle: Full screen</msg>
<msg timestamp="20220120 10:44:59.772" level="INFO" html="true">Screenshot: &lt;a href="Screenshots\Screenshot__2022-01-20__10_44_59__535685.png"&gt;Screenshot__2022-01-20__10_44_59__535685.png&lt;/a&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots\Screenshot__2022-01-20__10_44_59__535685.png"&gt;&lt;img src="Screenshots\Screenshot__2022-01-20__10_44_59__535685.png" height="350px"&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</msg>
<msg timestamp="20220120 10:44:59.772" level="FAIL">checkInputInNotepad: AssertionFailed --  (assertion: actual=expected; actually: Hello World IS NOT equal to Wrong Test)</msg>
<status status="FAIL" starttime="20220120 10:44:58.597" endtime="20220120 10:44:59.772"/>
</kw>
<status status="PASS" starttime="20220120 10:44:58.597" endtime="20220120 10:44:59.773"/>
</kw>
<status status="PASS" starttime="20220120 10:44:58.578" endtime="20220120 10:44:59.774"/>
</test>
<test id="s1-s1-s4-t2" name="Test with another failing keyword - one word string param">
<kw name="Connect Screenshot SUT" library="common" type="SETUP">
<kw name="Connect Sut" library="EggplantLibrary">
<arg>{Type:"screenshot", name:"${SUT screenshot file}"}</arg>
<doc>Opens a VNC or RDP connection with a SUT / makes it the active connection.</doc>
<msg timestamp="20220120 10:44:59.776" level="INFO">Send command to eggPlant server: 'connect {Type:"screenshot", name:"D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png"}'</msg>
<msg timestamp="20220120 10:44:59.795" level="INFO">Execution duration: 0.003000020981</msg>
<msg timestamp="20220120 10:44:59.795" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:44:59.795" level="INFO" html="true">20.01.22, 09:44:59	connect		D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png:(null)
</msg>
<msg timestamp="20220120 10:44:59.795" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_44_59__535685.png</msg>
<status status="PASS" starttime="20220120 10:44:59.776" endtime="20220120 10:44:59.795"/>
</kw>
<status status="PASS" starttime="20220120 10:44:59.776" endtime="20220120 10:44:59.795"/>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>${error2}</arg>
<arg>Check Input In Notepad</arg>
<arg>${wrongExpectedText2}</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Check Input In Notepad" library="EggplantLibrary">
<arg>${wrongExpectedText2}</arg>
<tag>regression</tag>
<tag>smoke</tag>
<msg timestamp="20220120 10:44:59.796" level="INFO">Send command to eggPlant server: 'RunWithNewResults "checkInputInNotepad", "SomethinWrongText",'</msg>
<msg timestamp="20220120 10:45:00.568" level="INFO">Execution duration: 0.745000004768</msg>
<msg timestamp="20220120 10:45:00.568" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:00.568" level="INFO" html="true">20.01.22, 09:44:59	START		Running checkInputInNotepad.script
20.01.22, 09:45:00	readtext		(46,257)
20.01.22, 09:45:00	EndTestCase		(Duration:"0.228", Errors:"1", Exceptions:"0", StartTime:"2022-01-20 09:45:00 +0000", Successes:"0", TestCase:"checkInputInNotepad.script", Warnings:"0")
20.01.22, 09:45:00	FAILURE	Screen_Error.png	AssertionFailed:  (assertion: actual=expected; actually: Hello World IS NOT equal to SomethinWrongText) -- Execution Time 0:00:00 checkInputInNotepad.script
</msg>
<msg timestamp="20220120 10:45:00.568" level="INFO">Screenshot rectangle: Full screen</msg>
<msg timestamp="20220120 10:45:00.849" level="INFO" html="true">Screenshot: &lt;a href="Screenshots\Screenshot__2022-01-20__10_45_00__568244.png"&gt;Screenshot__2022-01-20__10_45_00__568244.png&lt;/a&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots\Screenshot__2022-01-20__10_45_00__568244.png"&gt;&lt;img src="Screenshots\Screenshot__2022-01-20__10_45_00__568244.png" height="350px"&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</msg>
<msg timestamp="20220120 10:45:00.850" level="FAIL">checkInputInNotepad: AssertionFailed --  (assertion: actual=expected; actually: Hello World IS NOT equal to SomethinWrongText)</msg>
<status status="FAIL" starttime="20220120 10:44:59.796" endtime="20220120 10:45:00.850"/>
</kw>
<status status="PASS" starttime="20220120 10:44:59.796" endtime="20220120 10:45:00.850"/>
</kw>
<status status="PASS" starttime="20220120 10:44:59.775" endtime="20220120 10:45:00.851"/>
</test>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:45:00.852" endtime="20220120 10:45:00.882"/>
</kw>
<status status="PASS" starttime="20220120 10:44:58.477" endtime="20220120 10:45:00.882"/>
</suite>
<suite id="s1-s1-s5" name="Logging" source="D:\DEV\robotframework-eggplant\tests\tests\Logging.robot">
<kw name="Open Session" library="EggplantLibrary" type="SETUP">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:45:00.947" level="INFO">Send command to eggPlant server: 'if EggplantVersion().eggplant &lt; "21.1.0" then LogWarning !"Incompatible eggplant version detected - [[EggplantVersion().eggplant]]. Min. version required - 21.1.0. See README for more information."'</msg>
<msg timestamp="20220120 10:45:00.985" level="INFO">Execution duration: 0.0</msg>
<msg timestamp="20220120 10:45:00.985" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:00.985" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:00.985" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_00__568244.png</msg>
<status status="PASS" starttime="20220120 10:45:00.888" endtime="20220120 10:45:00.985"/>
</kw>
<test id="s1-s1-s5-t1" name="Warnings">
<kw name="Log Warning In Eggplant" library="EggplantLibrary">
<arg>${my log msg}</arg>
<doc>Logs a given parameter value as a waning message</doc>
<msg timestamp="20220120 10:45:00.986" level="INFO">Send command to eggPlant server: 'RunWithNewResults "logWarningInEggplant", "This message should appear as warning!",'</msg>
<msg timestamp="20220120 10:45:01.142" level="INFO">Execution duration: 0.141000032425</msg>
<msg timestamp="20220120 10:45:01.142" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:01.142" level="INFO" html="true">20.01.22, 09:45:01	START		Running logWarningInEggplant.script
20.01.22, 09:45:01	LogWarning		This message should appear as warning!
20.01.22, 09:45:01	EndTestCase		(Duration:"0.005", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:01 +0000", Successes:"1", TestCase:"logWarningInEggplant.script", Warnings:"1")
20.01.22, 09:45:01	SUCCESS		Execution Time 0:00:00 logWarningInEggplant.script
</msg>
<msg timestamp="20220120 10:45:01.142" level="WARN">This message should appear as warning!</msg>
<msg timestamp="20220120 10:45:01.143" level="INFO">Return value: </msg>
<status status="PASS" starttime="20220120 10:45:00.985" endtime="20220120 10:45:01.143"/>
</kw>
<status status="PASS" starttime="20220120 10:45:00.985" endtime="20220120 10:45:01.144"/>
</test>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:45:01.145" endtime="20220120 10:45:01.173"/>
</kw>
<status status="PASS" starttime="20220120 10:45:00.884" endtime="20220120 10:45:01.173"/>
</suite>
<suite id="s1-s1-s6" name="Movie" source="D:\DEV\robotframework-eggplant\tests\tests\Movie.robot">
<kw name="Open Session" library="EggplantLibrary" type="SETUP">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:45:01.243" level="INFO">Send command to eggPlant server: 'if EggplantVersion().eggplant &lt; "21.1.0" then LogWarning !"Incompatible eggplant version detected - [[EggplantVersion().eggplant]]. Min. version required - 21.1.0. See README for more information."'</msg>
<msg timestamp="20220120 10:45:01.293" level="INFO">Execution duration: 0.0</msg>
<msg timestamp="20220120 10:45:01.293" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:01.293" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:01.293" level="INFO">Return value: {'Duration': 0.011000037193, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/logWarningInEggplant/20220120_094501.036/LogFile.txt', 'ReturnValue': '', 'RunDate': &lt;DateTime '20220120T09:45:01' at 0x2ceaa1ba1c0&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 1.0}</msg>
<status status="PASS" starttime="20220120 10:45:01.182" endtime="20220120 10:45:01.293"/>
</kw>
<test id="s1-s1-s6-t1" name="Start and stop movie manually">
<kw name="Connect Screenshot SUT" library="common" type="SETUP">
<kw name="Connect Sut" library="EggplantLibrary">
<arg>{Type:"screenshot", name:"${SUT screenshot file}"}</arg>
<doc>Opens a VNC or RDP connection with a SUT / makes it the active connection.</doc>
<msg timestamp="20220120 10:45:01.294" level="INFO">Send command to eggPlant server: 'connect {Type:"screenshot", name:"D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png"}'</msg>
<msg timestamp="20220120 10:45:01.326" level="INFO">Execution duration: 0.003000020981</msg>
<msg timestamp="20220120 10:45:01.326" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:01.326" level="INFO" html="true">20.01.22, 09:45:01	connect		D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png:(null)
</msg>
<msg timestamp="20220120 10:45:01.326" level="INFO">Return value: {'Duration': 0.011000037193, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/logWarningInEggplant/20220120_094501.036/LogFile.txt', 'ReturnValue': '', 'RunDate': &lt;DateTime '20220120T09:45:01' at 0x2ceaa25e340&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 1.0}</msg>
<status status="PASS" starttime="20220120 10:45:01.294" endtime="20220120 10:45:01.326"/>
</kw>
<status status="PASS" starttime="20220120 10:45:01.294" endtime="20220120 10:45:01.326"/>
</kw>
<kw name="Start Movie" library="EggplantLibrary">
<doc>Starts video recording into the specified file and returns the absolute path to it.</doc>
<msg timestamp="20220120 10:45:01.327" level="INFO">Send command to eggPlant server: 'StartMovie "D:\DEV\robotframework-eggplant\out\Movies\Movie__2022-01-20__10_45_01.mp4", framesPerSecond:15, compressionRate:1, imageHighlighting:True, extraTime:5'</msg>
<msg timestamp="20220120 10:45:01.391" level="INFO">Execution duration: 0.009999990463</msg>
<msg timestamp="20220120 10:45:01.391" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:01.391" level="INFO" html="true">20.01.22, 09:45:01	startmovie		D:/DEV/robotframework-eggplant/out/Movies/Movie__2022-01-20__10_45_01.mp4
</msg>
<msg timestamp="20220120 10:45:01.391" level="INFO">Return value: {'Duration': 0.011000037193, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/logWarningInEggplant/20220120_094501.036/LogFile.txt', 'ReturnValue': '', 'RunDate': &lt;DateTime '20220120T09:45:01' at 0x2ceaa256850&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 1.0}</msg>
<msg timestamp="20220120 10:45:01.391" level="INFO">Start video recording</msg>
<msg timestamp="20220120 10:45:01.391" level="INFO" html="true">Video file path: &lt;a href="Movies\Movie__2022-01-20__10_45_01.mp4"&gt;Movie__2022-01-20__10_45_01.mp4&lt;/a&gt;</msg>
<msg timestamp="20220120 10:45:01.391" level="INFO" html="true">&lt;tr&gt;&lt;video  height="350px" controls&gt; &lt;source src="Movies\Movie__2022-01-20__10_45_01.mp4" type="video/mp4"&gt;Browser does not support video.&lt;/video&gt;&lt;/tr&gt;</msg>
<status status="PASS" starttime="20220120 10:45:01.327" endtime="20220120 10:45:01.391"/>
</kw>
<kw name="Check Input In Notepad" library="EggplantLibrary">
<arg>Hello World</arg>
<tag>regression</tag>
<tag>smoke</tag>
<msg timestamp="20220120 10:45:01.392" level="INFO">Send command to eggPlant server: 'RunWithNewResults "checkInputInNotepad", "Hello World",'</msg>
<msg timestamp="20220120 10:45:01.896" level="INFO">Execution duration: 0.476999998093</msg>
<msg timestamp="20220120 10:45:01.896" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:01.896" level="INFO" html="true">20.01.22, 09:45:01	START		Running checkInputInNotepad.script
20.01.22, 09:45:01	readtext		(46,257)
20.01.22, 09:45:01	LogSuccess		Assertion Succeeded:  (assertion: actual=expected; true: Hello World IS equal to Hello World)
20.01.22, 09:45:01	EndTestCase		(Duration:"0.206", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:01 +0000", Successes:"1", TestCase:"checkInputInNotepad.script", Warnings:"0")
20.01.22, 09:45:01	SUCCESS		Execution Time 0:00:00 checkInputInNotepad.script
</msg>
<msg timestamp="20220120 10:45:01.896" level="INFO">Return value: </msg>
<status status="PASS" starttime="20220120 10:45:01.392" endtime="20220120 10:45:01.896"/>
</kw>
<kw name="Stop Movie" library="EggplantLibrary" type="TEARDOWN">
<doc>Stops current video recording.</doc>
<msg timestamp="20220120 10:45:01.897" level="INFO">Stop video recording.</msg>
<msg timestamp="20220120 10:45:01.897" level="INFO">Send command to eggPlant server: 'StopMovie'</msg>
<msg timestamp="20220120 10:45:02.131" level="INFO">Execution duration: 0.21899998188</msg>
<msg timestamp="20220120 10:45:02.131" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:02.131" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:02.131" level="INFO">Return value: {'Duration': 0.212000012398, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/checkInputInNotepad/20220120_094501.578/LogFile.txt', 'ReturnValue': '', 'RunDate': &lt;DateTime '20220120T09:45:01' at 0x2ceaa25eaf0&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<msg timestamp="20220120 10:45:02.131" level="INFO" html="true">Video file path: &lt;a href="Movies\Movie__2022-01-20__10_45_01.mp4"&gt;Movie__2022-01-20__10_45_01.mp4&lt;/a&gt;</msg>
<msg timestamp="20220120 10:45:02.131" level="INFO" html="true">&lt;tr&gt;&lt;video  height="350px" controls&gt; &lt;source src="Movies\Movie__2022-01-20__10_45_01.mp4" type="video/mp4"&gt;Browser does not support video.&lt;/video&gt;&lt;/tr&gt;</msg>
<status status="PASS" starttime="20220120 10:45:01.897" endtime="20220120 10:45:02.131"/>
</kw>
<status status="PASS" starttime="20220120 10:45:01.293" endtime="20220120 10:45:02.132"/>
</test>
<test id="s1-s1-s6-t2" name="Embedded movie in case of errors">
<kw name="Connect Screenshot SUT" library="common" type="SETUP">
<kw name="Connect Sut" library="EggplantLibrary">
<arg>{Type:"screenshot", name:"${SUT screenshot file}"}</arg>
<doc>Opens a VNC or RDP connection with a SUT / makes it the active connection.</doc>
<msg timestamp="20220120 10:45:02.134" level="INFO">Send command to eggPlant server: 'connect {Type:"screenshot", name:"D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png"}'</msg>
<msg timestamp="20220120 10:45:02.151" level="INFO">Execution duration: 0.003000020981</msg>
<msg timestamp="20220120 10:45:02.151" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:02.151" level="INFO" html="true">20.01.22, 09:45:02	connect		D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png:(null)
</msg>
<msg timestamp="20220120 10:45:02.151" level="INFO">Return value: {'Duration': 0.212000012398, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/checkInputInNotepad/20220120_094501.578/LogFile.txt', 'ReturnValue': '', 'RunDate': &lt;DateTime '20220120T09:45:01' at 0x2ceaa2638e0&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<status status="PASS" starttime="20220120 10:45:02.134" endtime="20220120 10:45:02.152"/>
</kw>
<status status="PASS" starttime="20220120 10:45:02.134" endtime="20220120 10:45:02.152"/>
</kw>
<kw name="Start Movie" library="EggplantLibrary">
<doc>Starts video recording into the specified file and returns the absolute path to it.</doc>
<msg timestamp="20220120 10:45:02.153" level="INFO">Send command to eggPlant server: 'StartMovie "D:\DEV\robotframework-eggplant\out\Movies\Movie__2022-01-20__10_45_02.mp4", framesPerSecond:15, compressionRate:1, imageHighlighting:True, extraTime:5'</msg>
<msg timestamp="20220120 10:45:02.189" level="INFO">Execution duration: 0.008999943733</msg>
<msg timestamp="20220120 10:45:02.189" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:02.189" level="INFO" html="true">20.01.22, 09:45:02	startmovie		D:/DEV/robotframework-eggplant/out/Movies/Movie__2022-01-20__10_45_02.mp4
</msg>
<msg timestamp="20220120 10:45:02.189" level="INFO">Return value: {'Duration': 0.212000012398, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/checkInputInNotepad/20220120_094501.578/LogFile.txt', 'ReturnValue': '', 'RunDate': &lt;DateTime '20220120T09:45:01' at 0x2ceaa263fa0&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<msg timestamp="20220120 10:45:02.190" level="INFO">Start video recording</msg>
<msg timestamp="20220120 10:45:02.190" level="INFO" html="true">Video file path: &lt;a href="Movies\Movie__2022-01-20__10_45_02.mp4"&gt;Movie__2022-01-20__10_45_02.mp4&lt;/a&gt;</msg>
<msg timestamp="20220120 10:45:02.190" level="INFO" html="true">&lt;tr&gt;&lt;video  height="350px" controls&gt; &lt;source src="Movies\Movie__2022-01-20__10_45_02.mp4" type="video/mp4"&gt;Browser does not support video.&lt;/video&gt;&lt;/tr&gt;</msg>
<status status="PASS" starttime="20220120 10:45:02.152" endtime="20220120 10:45:02.190"/>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*Hello World IS NOT equal to Wrong text*</arg>
<arg>Check Input In Notepad</arg>
<arg>Wrong text</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Check Input In Notepad" library="EggplantLibrary">
<arg>Wrong text</arg>
<tag>regression</tag>
<tag>smoke</tag>
<msg timestamp="20220120 10:45:02.191" level="INFO">Send command to eggPlant server: 'RunWithNewResults "checkInputInNotepad", "Wrong text",'</msg>
<msg timestamp="20220120 10:45:02.863" level="INFO">Execution duration: 0.649000048637</msg>
<msg timestamp="20220120 10:45:02.863" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:02.863" level="INFO" html="true">20.01.22, 09:45:02	START		Running checkInputInNotepad.script
20.01.22, 09:45:02	readtext		(46,257)
20.01.22, 09:45:02	EndTestCase		(Duration:"0.177", Errors:"1", Exceptions:"0", StartTime:"2022-01-20 09:45:02 +0000", Successes:"0", TestCase:"checkInputInNotepad.script", Warnings:"0")
20.01.22, 09:45:02	FAILURE	Screen_Error.png	AssertionFailed:  (assertion: actual=expected; actually: Hello World IS NOT equal to Wrong text) -- Execution Time 0:00:00 checkInputInNotepad.script
</msg>
<msg timestamp="20220120 10:45:02.863" level="INFO">Screenshot rectangle: Full screen</msg>
<msg timestamp="20220120 10:45:03.142" level="INFO" html="true">Screenshot: &lt;a href="Screenshots\Screenshot__2022-01-20__10_45_02__862923.png"&gt;Screenshot__2022-01-20__10_45_02__862923.png&lt;/a&gt;</msg>
<msg timestamp="20220120 10:45:03.142" level="INFO" html="true">Video file path: &lt;a href="Movies\Movie__2022-01-20__10_45_02.mp4"&gt;Movie__2022-01-20__10_45_02.mp4&lt;/a&gt;</msg>
<msg timestamp="20220120 10:45:03.142" level="INFO" html="true">&lt;tr&gt;&lt;video poster="Screenshots\Screenshot__2022-01-20__10_45_02__862923.png" height="350px" controls&gt; &lt;source src="Movies\Movie__2022-01-20__10_45_02.mp4" type="video/mp4"&gt;Browser does not support video.&lt;/video&gt;&lt;/tr&gt;</msg>
<msg timestamp="20220120 10:45:03.142" level="FAIL">checkInputInNotepad: AssertionFailed --  (assertion: actual=expected; actually: Hello World IS NOT equal to Wrong text)</msg>
<status status="FAIL" starttime="20220120 10:45:02.190" endtime="20220120 10:45:03.142"/>
</kw>
<status status="PASS" starttime="20220120 10:45:02.190" endtime="20220120 10:45:03.142"/>
</kw>
<kw name="Stop Movie" library="EggplantLibrary" type="TEARDOWN">
<doc>Stops current video recording.</doc>
<msg timestamp="20220120 10:45:03.143" level="INFO">Stop video recording.</msg>
<msg timestamp="20220120 10:45:03.143" level="INFO">Send command to eggPlant server: 'StopMovie'</msg>
<msg timestamp="20220120 10:45:03.385" level="INFO">Execution duration: 0.215000033379</msg>
<msg timestamp="20220120 10:45:03.385" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:03.385" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:03.385" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_02__862923.png</msg>
<msg timestamp="20220120 10:45:03.385" level="INFO" html="true">Video file path: &lt;a href="Movies\Movie__2022-01-20__10_45_02.mp4"&gt;Movie__2022-01-20__10_45_02.mp4&lt;/a&gt;</msg>
<msg timestamp="20220120 10:45:03.385" level="INFO" html="true">&lt;tr&gt;&lt;video  height="350px" controls&gt; &lt;source src="Movies\Movie__2022-01-20__10_45_02.mp4" type="video/mp4"&gt;Browser does not support video.&lt;/video&gt;&lt;/tr&gt;</msg>
<status status="PASS" starttime="20220120 10:45:03.143" endtime="20220120 10:45:03.385"/>
</kw>
<doc>Expand the expectedly failed keyword to check the embedded video</doc>
<status status="PASS" starttime="20220120 10:45:02.133" endtime="20220120 10:45:03.385"/>
</test>
<test id="s1-s1-s6-t3" name="Movie wasn't stopped">
<kw name="Connect Screenshot SUT" library="common" type="SETUP">
<kw name="Connect Sut" library="EggplantLibrary">
<arg>{Type:"screenshot", name:"${SUT screenshot file}"}</arg>
<doc>Opens a VNC or RDP connection with a SUT / makes it the active connection.</doc>
<msg timestamp="20220120 10:45:03.389" level="INFO">Send command to eggPlant server: 'connect {Type:"screenshot", name:"D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png"}'</msg>
<msg timestamp="20220120 10:45:03.433" level="INFO">Execution duration: 0.003000020981</msg>
<msg timestamp="20220120 10:45:03.433" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:03.433" level="INFO" html="true">20.01.22, 09:45:03	connect		D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png:(null)
</msg>
<msg timestamp="20220120 10:45:03.433" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_02__862923.png</msg>
<status status="PASS" starttime="20220120 10:45:03.388" endtime="20220120 10:45:03.433"/>
</kw>
<status status="PASS" starttime="20220120 10:45:03.388" endtime="20220120 10:45:03.433"/>
</kw>
<kw name="Start Movie" library="EggplantLibrary">
<doc>Starts video recording into the specified file and returns the absolute path to it.</doc>
<msg timestamp="20220120 10:45:03.434" level="INFO">Send command to eggPlant server: 'StartMovie "D:\DEV\robotframework-eggplant\out\Movies\Movie__2022-01-20__10_45_03.mp4", framesPerSecond:15, compressionRate:1, imageHighlighting:True, extraTime:5'</msg>
<msg timestamp="20220120 10:45:03.459" level="INFO">Execution duration: 0.008000016212</msg>
<msg timestamp="20220120 10:45:03.459" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:03.459" level="INFO" html="true">20.01.22, 09:45:03	startmovie		D:/DEV/robotframework-eggplant/out/Movies/Movie__2022-01-20__10_45_03.mp4
</msg>
<msg timestamp="20220120 10:45:03.459" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_02__862923.png</msg>
<msg timestamp="20220120 10:45:03.459" level="INFO">Start video recording</msg>
<msg timestamp="20220120 10:45:03.459" level="INFO" html="true">Video file path: &lt;a href="Movies\Movie__2022-01-20__10_45_03.mp4"&gt;Movie__2022-01-20__10_45_03.mp4&lt;/a&gt;</msg>
<msg timestamp="20220120 10:45:03.459" level="INFO" html="true">&lt;tr&gt;&lt;video  height="350px" controls&gt; &lt;source src="Movies\Movie__2022-01-20__10_45_03.mp4" type="video/mp4"&gt;Browser does not support video.&lt;/video&gt;&lt;/tr&gt;</msg>
<status status="PASS" starttime="20220120 10:45:03.434" endtime="20220120 10:45:03.459"/>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*StartMovie is not allowed when a movie is already being recorded*</arg>
<arg>Start movie</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Start Movie" library="EggplantLibrary">
<doc>Starts video recording into the specified file and returns the absolute path to it.</doc>
<msg timestamp="20220120 10:45:03.461" level="INFO">Send command to eggPlant server: 'StartMovie "D:\DEV\robotframework-eggplant\out\Movies\Movie__2022-01-20__10_45_03.mp4", framesPerSecond:15, compressionRate:1, imageHighlighting:True, extraTime:5'</msg>
<msg timestamp="20220120 10:45:03.484" level="FAIL">Fault: &lt;Fault 4: 'MovieError: StartMovie is not allowed when a movie is already being recorded'&gt;</msg>
<status status="FAIL" starttime="20220120 10:45:03.460" endtime="20220120 10:45:03.484"/>
</kw>
<status status="PASS" starttime="20220120 10:45:03.460" endtime="20220120 10:45:03.484"/>
</kw>
<kw name="Stop Movie" library="EggplantLibrary" type="TEARDOWN">
<doc>Stops current video recording.</doc>
<msg timestamp="20220120 10:45:03.485" level="INFO">Stop video recording.</msg>
<msg timestamp="20220120 10:45:03.485" level="INFO">Send command to eggPlant server: 'StopMovie'</msg>
<msg timestamp="20220120 10:45:03.713" level="INFO">Execution duration: 0.215999960899</msg>
<msg timestamp="20220120 10:45:03.713" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:03.713" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:03.713" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_02__862923.png</msg>
<msg timestamp="20220120 10:45:03.713" level="INFO" html="true">Video file path: &lt;a href="Movies\Movie__2022-01-20__10_45_03.mp4"&gt;Movie__2022-01-20__10_45_03.mp4&lt;/a&gt;</msg>
<msg timestamp="20220120 10:45:03.713" level="INFO" html="true">&lt;tr&gt;&lt;video  height="350px" controls&gt; &lt;source src="Movies\Movie__2022-01-20__10_45_03.mp4" type="video/mp4"&gt;Browser does not support video.&lt;/video&gt;&lt;/tr&gt;</msg>
<status status="PASS" starttime="20220120 10:45:03.485" endtime="20220120 10:45:03.713"/>
</kw>
<status status="PASS" starttime="20220120 10:45:03.387" endtime="20220120 10:45:03.713"/>
</test>
<test id="s1-s1-s6-t4" name="Movie wasn't started - error ignored">
<kw name="Connect Screenshot SUT" library="common" type="SETUP">
<kw name="Connect Sut" library="EggplantLibrary">
<arg>{Type:"screenshot", name:"${SUT screenshot file}"}</arg>
<doc>Opens a VNC or RDP connection with a SUT / makes it the active connection.</doc>
<msg timestamp="20220120 10:45:03.716" level="INFO">Send command to eggPlant server: 'connect {Type:"screenshot", name:"D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png"}'</msg>
<msg timestamp="20220120 10:45:03.732" level="INFO">Execution duration: 0.003000020981</msg>
<msg timestamp="20220120 10:45:03.732" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:03.732" level="INFO" html="true">20.01.22, 09:45:03	connect		D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png:(null)
</msg>
<msg timestamp="20220120 10:45:03.732" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_02__862923.png</msg>
<status status="PASS" starttime="20220120 10:45:03.716" endtime="20220120 10:45:03.732"/>
</kw>
<status status="PASS" starttime="20220120 10:45:03.715" endtime="20220120 10:45:03.732"/>
</kw>
<kw name="Stop Movie" library="EggplantLibrary">
<doc>Stops current video recording.</doc>
<msg timestamp="20220120 10:45:03.733" level="INFO">Stop video recording.</msg>
<msg timestamp="20220120 10:45:03.733" level="INFO">Send command to eggPlant server: 'StopMovie'</msg>
<msg timestamp="20220120 10:45:03.760" level="INFO">MovieError: StopMovie is not allowed -- there is no movie being recorded</msg>
<status status="PASS" starttime="20220120 10:45:03.733" endtime="20220120 10:45:03.760"/>
</kw>
<kw name="Stop Movie" library="EggplantLibrary" type="TEARDOWN">
<doc>Stops current video recording.</doc>
<msg timestamp="20220120 10:45:03.761" level="INFO">Stop video recording.</msg>
<msg timestamp="20220120 10:45:03.761" level="INFO">Send command to eggPlant server: 'StopMovie'</msg>
<msg timestamp="20220120 10:45:03.777" level="INFO">MovieError: StopMovie is not allowed -- there is no movie being recorded</msg>
<status status="PASS" starttime="20220120 10:45:03.761" endtime="20220120 10:45:03.777"/>
</kw>
<status status="PASS" starttime="20220120 10:45:03.715" endtime="20220120 10:45:03.777"/>
</test>
<test id="s1-s1-s6-t5" name="Movie wasn't started - error excepted">
<kw name="Connect Screenshot SUT" library="common" type="SETUP">
<kw name="Connect Sut" library="EggplantLibrary">
<arg>{Type:"screenshot", name:"${SUT screenshot file}"}</arg>
<doc>Opens a VNC or RDP connection with a SUT / makes it the active connection.</doc>
<msg timestamp="20220120 10:45:03.780" level="INFO">Send command to eggPlant server: 'connect {Type:"screenshot", name:"D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png"}'</msg>
<msg timestamp="20220120 10:45:03.809" level="INFO">Execution duration: 0.003000020981</msg>
<msg timestamp="20220120 10:45:03.809" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:03.809" level="INFO" html="true">20.01.22, 09:45:03	connect		D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png:(null)
</msg>
<msg timestamp="20220120 10:45:03.809" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_02__862923.png</msg>
<status status="PASS" starttime="20220120 10:45:03.780" endtime="20220120 10:45:03.809"/>
</kw>
<status status="PASS" starttime="20220120 10:45:03.779" endtime="20220120 10:45:03.809"/>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*StopMovie is not allowed -- there is no movie being recorded*</arg>
<arg>Stop movie</arg>
<arg>error if no movie started=True</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Stop Movie" library="EggplantLibrary">
<arg>error if no movie started=True</arg>
<doc>Stops current video recording.</doc>
<msg timestamp="20220120 10:45:03.810" level="INFO">Stop video recording.</msg>
<msg timestamp="20220120 10:45:03.810" level="INFO">Send command to eggPlant server: 'StopMovie'</msg>
<msg timestamp="20220120 10:45:03.838" level="FAIL">MovieError: StopMovie is not allowed -- there is no movie being recorded</msg>
<status status="FAIL" starttime="20220120 10:45:03.810" endtime="20220120 10:45:03.838"/>
</kw>
<status status="PASS" starttime="20220120 10:45:03.810" endtime="20220120 10:45:03.838"/>
</kw>
<kw name="Stop Movie" library="EggplantLibrary" type="TEARDOWN">
<doc>Stops current video recording.</doc>
<msg timestamp="20220120 10:45:03.839" level="INFO">Stop video recording.</msg>
<msg timestamp="20220120 10:45:03.839" level="INFO">Send command to eggPlant server: 'StopMovie'</msg>
<msg timestamp="20220120 10:45:03.852" level="INFO">MovieError: StopMovie is not allowed -- there is no movie being recorded</msg>
<status status="PASS" starttime="20220120 10:45:03.839" endtime="20220120 10:45:03.852"/>
</kw>
<status status="PASS" starttime="20220120 10:45:03.779" endtime="20220120 10:45:03.852"/>
</test>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:45:03.855" endtime="20220120 10:45:03.871"/>
</kw>
<status status="PASS" starttime="20220120 10:45:01.175" endtime="20220120 10:45:03.871"/>
</suite>
<suite id="s1-s1-s7" name="Params" source="D:\DEV\robotframework-eggplant\tests\tests\Params.robot">
<kw name="Open Session" library="EggplantLibrary" type="SETUP">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:45:03.937" level="INFO">Send command to eggPlant server: 'if EggplantVersion().eggplant &lt; "21.1.0" then LogWarning !"Incompatible eggplant version detected - [[EggplantVersion().eggplant]]. Min. version required - 21.1.0. See README for more information."'</msg>
<msg timestamp="20220120 10:45:03.975" level="INFO">Execution duration: 0.0</msg>
<msg timestamp="20220120 10:45:03.976" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:03.976" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:03.976" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_02__862923.png</msg>
<status status="PASS" starttime="20220120 10:45:03.887" endtime="20220120 10:45:03.976"/>
</kw>
<test id="s1-s1-s7-t1" name="Simple Params">
<kw name="Several Params" library="EggplantLibrary">
<arg>1</arg>
<arg>second param</arg>
<arg>third</arg>
<doc> multiline 1
multiline inside</doc>
<msg timestamp="20220120 10:45:03.977" level="INFO">Send command to eggPlant server: 'RunWithNewResults "severalParams", "1", "second param", "third",'</msg>
<msg timestamp="20220120 10:45:04.331" level="INFO">Execution duration: 0.335999965668</msg>
<msg timestamp="20220120 10:45:04.331" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:04.331" level="INFO" html="true">20.01.22, 09:45:04	START		Running severalParams.script
1
second param
third
20.01.22, 09:45:04	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:04 +0000", Successes:"1", TestCase:"severalParams.script", Warnings:"0")
20.01.22, 09:45:04	SUCCESS		Execution Time 0:00:00 severalParams.script
</msg>
<msg timestamp="20220120 10:45:04.331" level="INFO">Return value: </msg>
<status status="PASS" starttime="20220120 10:45:03.976" endtime="20220120 10:45:04.331"/>
</kw>
<status status="PASS" starttime="20220120 10:45:03.976" endtime="20220120 10:45:04.332"/>
</test>
<test id="s1-s1-s7-t2" name="Quoted strings as params">
<kw name="Several Params" library="EggplantLibrary">
<arg>${testname}</arg>
<arg>"second param"</arg>
<arg>third</arg>
<doc> multiline 1
multiline inside</doc>
<msg timestamp="20220120 10:45:04.333" level="INFO">Send command to eggPlant server: 'RunWithNewResults "severalParams", "Quoted strings as params", "second param", "third",'</msg>
<msg timestamp="20220120 10:45:04.582" level="INFO">Execution duration: 0.203999996185</msg>
<msg timestamp="20220120 10:45:04.582" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:04.582" level="INFO" html="true">20.01.22, 09:45:04	START		Running severalParams.script
Quoted strings as params
second param
third
20.01.22, 09:45:04	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:04 +0000", Successes:"1", TestCase:"severalParams.script", Warnings:"0")
20.01.22, 09:45:04	SUCCESS		Execution Time 0:00:00 severalParams.script
</msg>
<msg timestamp="20220120 10:45:04.582" level="INFO">Return value: </msg>
<status status="PASS" starttime="20220120 10:45:04.333" endtime="20220120 10:45:04.582"/>
</kw>
<status status="PASS" starttime="20220120 10:45:04.333" endtime="20220120 10:45:04.582"/>
</test>
<test id="s1-s1-s7-t3" name="Params Numeric_Alphabetic">
<kw name="Several Params" library="EggplantLibrary">
<arg>1</arg>
<arg>2</arg>
<arg>04_01_030_20008_XYZ</arg>
<doc> multiline 1
multiline inside</doc>
<msg timestamp="20220120 10:45:04.584" level="INFO">Send command to eggPlant server: 'RunWithNewResults "severalParams", "1", "2", "04_01_030_20008_XYZ",'</msg>
<msg timestamp="20220120 10:45:04.794" level="INFO">Execution duration: 0.18700003624</msg>
<msg timestamp="20220120 10:45:04.795" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:04.795" level="INFO" html="true">20.01.22, 09:45:04	START		Running severalParams.script
1
2
04_01_030_20008_XYZ
20.01.22, 09:45:04	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:04 +0000", Successes:"1", TestCase:"severalParams.script", Warnings:"0")
20.01.22, 09:45:04	SUCCESS		Execution Time 0:00:00 severalParams.script
</msg>
<msg timestamp="20220120 10:45:04.795" level="INFO">Return value: </msg>
<status status="PASS" starttime="20220120 10:45:04.584" endtime="20220120 10:45:04.795"/>
</kw>
<status status="PASS" starttime="20220120 10:45:04.584" endtime="20220120 10:45:04.795"/>
</test>
<test id="s1-s1-s7-t4" name="Integer param">
<kw name="Set Variable" library="BuiltIn">
<var>${my int}</var>
<arg>${123}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220120 10:45:04.797" level="INFO">${my int} = 123</msg>
<status status="PASS" starttime="20220120 10:45:04.797" endtime="20220120 10:45:04.797"/>
</kw>
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${result}</var>
<arg>${my int}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:04.798" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", 123,'</msg>
<msg timestamp="20220120 10:45:05.804" level="INFO">Execution duration: 0.980000019073</msg>
<msg timestamp="20220120 10:45:05.804" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:05.804" level="INFO" html="true">20.01.22, 09:45:05	START		Running returnTheSameValue.script
20.01.22, 09:45:05	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:05 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:05	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:05.805" level="INFO">Return value: 123</msg>
<msg timestamp="20220120 10:45:05.805" level="INFO">${result} = 123</msg>
<status status="PASS" starttime="20220120 10:45:04.797" endtime="20220120 10:45:05.805"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${my int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:05.805" endtime="20220120 10:45:05.806"/>
</kw>
<status status="PASS" starttime="20220120 10:45:04.796" endtime="20220120 10:45:05.806"/>
</test>
<test id="s1-s1-s7-t5" name="Float param - positive">
<kw name="Set Variable" library="BuiltIn">
<var>${my float}</var>
<arg>${123.45}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220120 10:45:05.809" level="INFO">${my float} = 123.45</msg>
<status status="PASS" starttime="20220120 10:45:05.808" endtime="20220120 10:45:05.809"/>
</kw>
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${result}</var>
<arg>${my float}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:05.810" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", 123.45,'</msg>
<msg timestamp="20220120 10:45:06.416" level="INFO">Execution duration: 0.572999954224</msg>
<msg timestamp="20220120 10:45:06.416" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:06.416" level="INFO" html="true">20.01.22, 09:45:06	START		Running returnTheSameValue.script
20.01.22, 09:45:06	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:06 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:06	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:06.416" level="INFO">Return value: 123.45</msg>
<msg timestamp="20220120 10:45:06.416" level="INFO">${result} = 123.45</msg>
<status status="PASS" starttime="20220120 10:45:05.810" endtime="20220120 10:45:06.416"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${my float}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:06.417" endtime="20220120 10:45:06.417"/>
</kw>
<status status="PASS" starttime="20220120 10:45:05.808" endtime="20220120 10:45:06.418"/>
</test>
<test id="s1-s1-s7-t6" name="Float param - negative">
<kw name="Set Variable" library="BuiltIn">
<var>${my float}</var>
<arg>${-123.45}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220120 10:45:06.421" level="INFO">${my float} = -123.45</msg>
<status status="PASS" starttime="20220120 10:45:06.421" endtime="20220120 10:45:06.421"/>
</kw>
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${result}</var>
<arg>${my float}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:06.422" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", -123.45,'</msg>
<msg timestamp="20220120 10:45:07.009" level="INFO">Execution duration: 0.555999994278</msg>
<msg timestamp="20220120 10:45:07.009" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:07.009" level="INFO" html="true">20.01.22, 09:45:06	START		Running returnTheSameValue.script
20.01.22, 09:45:06	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:06 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:06	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:07.009" level="INFO">Return value: -123.45</msg>
<msg timestamp="20220120 10:45:07.010" level="INFO">${result} = -123.45</msg>
<status status="PASS" starttime="20220120 10:45:06.422" endtime="20220120 10:45:07.010"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${my float}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:07.010" endtime="20220120 10:45:07.011"/>
</kw>
<status status="PASS" starttime="20220120 10:45:06.420" endtime="20220120 10:45:07.011"/>
</test>
<test id="s1-s1-s7-t7" name="Float param - convert from string">
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${result}</var>
<arg>${-123.45}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:07.013" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", -123.45,'</msg>
<msg timestamp="20220120 10:45:07.480" level="INFO">Execution duration: 0.444000005722</msg>
<msg timestamp="20220120 10:45:07.480" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:07.481" level="INFO" html="true">20.01.22, 09:45:07	START		Running returnTheSameValue.script
20.01.22, 09:45:07	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:07 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:07	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:07.481" level="INFO">Return value: -123.45</msg>
<msg timestamp="20220120 10:45:07.481" level="INFO">${result} = -123.45</msg>
<status status="PASS" starttime="20220120 10:45:07.013" endtime="20220120 10:45:07.481"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${-123.45}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:07.481" endtime="20220120 10:45:07.482"/>
</kw>
<status status="PASS" starttime="20220120 10:45:07.012" endtime="20220120 10:45:07.482"/>
</test>
<test id="s1-s1-s7-t8" name="Strict variables">
<kw name="Set Variable" library="BuiltIn">
<var>${my float}</var>
<arg>${-123.45}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220120 10:45:07.486" level="INFO">${my float} = -123.45</msg>
<status status="PASS" starttime="20220120 10:45:07.485" endtime="20220120 10:45:07.486"/>
</kw>
<kw name="Run Command" library="EggplantLibrary">
<arg>set the strictVariables to true</arg>
<doc>Sends the requested command to eggPlant server via XML RPC.
Allows you to call any eggPlant function or script beyond available keywords.</doc>
<msg timestamp="20220120 10:45:07.486" level="INFO">Send command to eggPlant server: 'set the strictVariables to true'</msg>
<msg timestamp="20220120 10:45:07.522" level="INFO">Execution duration: 0.00100004673</msg>
<msg timestamp="20220120 10:45:07.522" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:07.522" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:07.523" level="INFO">Return value: {'Duration': 0.008000016212, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/returnTheSameValue/20220120_094506.808/LogFile.txt', 'ReturnValue': '-123.45', 'RunDate': &lt;DateTime '20220120T09:45:07' at 0x2ceaa2632b0&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<status status="PASS" starttime="20220120 10:45:07.486" endtime="20220120 10:45:07.523"/>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*StrictVariablesViolation*</arg>
<arg>Log undefined variable</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Log Undefined Variable" library="EggplantLibrary">
<msg timestamp="20220120 10:45:07.524" level="INFO">Send command to eggPlant server: 'RunWithNewResults "logUndefinedVariable",'</msg>
<msg timestamp="20220120 10:45:07.917" level="INFO">Execution duration: 0.378999948502</msg>
<msg timestamp="20220120 10:45:07.917" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:07.917" level="INFO" html="true">20.01.22, 09:45:07	START		Running logUndefinedVariable.script
20.01.22, 09:45:07	EndTestCase		(Duration:"0.003", Errors:"1", Exceptions:"0", StartTime:"2022-01-20 09:45:07 +0000", Successes:"0", TestCase:"logUndefinedVariable.script", Warnings:"0")
20.01.22, 09:45:07	FAILURE	Screen_Error.png	StrictVariablesViolation: Variable 'someValue' used without being set -- Execution Time 0:00:00 logUndefinedVariable.script
</msg>
<msg timestamp="20220120 10:45:07.917" level="INFO">Screenshot rectangle: Full screen</msg>
<msg timestamp="20220120 10:45:08.146" level="INFO" html="true">Screenshot: &lt;a href="Screenshots\Screenshot__2022-01-20__10_45_07__916968.png"&gt;Screenshot__2022-01-20__10_45_07__916968.png&lt;/a&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots\Screenshot__2022-01-20__10_45_07__916968.png"&gt;&lt;img src="Screenshots\Screenshot__2022-01-20__10_45_07__916968.png" height="350px"&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</msg>
<msg timestamp="20220120 10:45:08.146" level="FAIL">logUndefinedVariable: StrictVariablesViolation -- Variable 'someValue' used without being set</msg>
<status status="FAIL" starttime="20220120 10:45:07.523" endtime="20220120 10:45:08.146"/>
</kw>
<status status="PASS" starttime="20220120 10:45:07.523" endtime="20220120 10:45:08.147"/>
</kw>
<kw name="Run Command" library="EggplantLibrary" type="TEARDOWN">
<arg>set the strictVariables to false</arg>
<doc>Sends the requested command to eggPlant server via XML RPC.
Allows you to call any eggPlant function or script beyond available keywords.</doc>
<msg timestamp="20220120 10:45:08.148" level="INFO">Send command to eggPlant server: 'set the strictVariables to false'</msg>
<msg timestamp="20220120 10:45:08.175" level="INFO">Execution duration: 0.00100004673</msg>
<msg timestamp="20220120 10:45:08.175" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:08.175" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:08.175" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_07__916968.png</msg>
<status status="PASS" starttime="20220120 10:45:08.147" endtime="20220120 10:45:08.175"/>
</kw>
<status status="PASS" starttime="20220120 10:45:07.484" endtime="20220120 10:45:08.176"/>
</test>
<test id="s1-s1-s7-t9" name="Strict variables - all string arguments must be quoted">
<kw name="Set Variable" library="BuiltIn">
<var>${str}</var>
<arg>hello</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220120 10:45:08.178" level="INFO">${str} = hello</msg>
<status status="PASS" starttime="20220120 10:45:08.178" endtime="20220120 10:45:08.178"/>
</kw>
<kw name="Run Command" library="EggplantLibrary">
<arg>set the strictVariables to true</arg>
<doc>Sends the requested command to eggPlant server via XML RPC.
Allows you to call any eggPlant function or script beyond available keywords.</doc>
<msg timestamp="20220120 10:45:08.179" level="INFO">Send command to eggPlant server: 'set the strictVariables to true'</msg>
<msg timestamp="20220120 10:45:08.192" level="INFO">Execution duration: 0.0</msg>
<msg timestamp="20220120 10:45:08.192" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:08.192" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:08.192" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_07__916968.png</msg>
<status status="PASS" starttime="20220120 10:45:08.178" endtime="20220120 10:45:08.192"/>
</kw>
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${result}</var>
<arg>${str}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:08.193" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", "hello",'</msg>
<msg timestamp="20220120 10:45:08.806" level="INFO">Execution duration: 0.580000042915</msg>
<msg timestamp="20220120 10:45:08.806" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:08.806" level="INFO" html="true">20.01.22, 09:45:08	START		Running returnTheSameValue.script
20.01.22, 09:45:08	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:08 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:08	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:08.806" level="INFO">Return value: hello</msg>
<msg timestamp="20220120 10:45:08.807" level="INFO">${result} = hello</msg>
<status status="PASS" starttime="20220120 10:45:08.193" endtime="20220120 10:45:08.807"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${str}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:08.808" endtime="20220120 10:45:08.808"/>
</kw>
<kw name="Run Command" library="EggplantLibrary" type="TEARDOWN">
<arg>set the strictVariables to false</arg>
<doc>Sends the requested command to eggPlant server via XML RPC.
Allows you to call any eggPlant function or script beyond available keywords.</doc>
<msg timestamp="20220120 10:45:08.809" level="INFO">Send command to eggPlant server: 'set the strictVariables to false'</msg>
<msg timestamp="20220120 10:45:08.844" level="INFO">Execution duration: 0.0</msg>
<msg timestamp="20220120 10:45:08.844" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:08.844" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:08.844" level="INFO">Return value: {'Duration': 0.008999943733, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/returnTheSameValue/20220120_094508.600/LogFile.txt', 'ReturnValue': 'hello', 'RunDate': &lt;DateTime '20220120T09:45:08' at 0x2ceaa2639a0&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<status status="PASS" starttime="20220120 10:45:08.809" endtime="20220120 10:45:08.844"/>
</kw>
<status status="PASS" starttime="20220120 10:45:08.177" endtime="20220120 10:45:08.845"/>
</test>
<test id="s1-s1-s7-t10" name="Param starting with whitespace">
<kw name="Set Variable" library="BuiltIn">
<var>${string}</var>
<arg>${SPACE}Hello</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220120 10:45:08.847" level="INFO">${string} =  Hello</msg>
<status status="PASS" starttime="20220120 10:45:08.847" endtime="20220120 10:45:08.847"/>
</kw>
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${result}</var>
<arg>${string}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:08.847" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", " Hello",'</msg>
<msg timestamp="20220120 10:45:09.459" level="INFO">Execution duration: 0.586000084877</msg>
<msg timestamp="20220120 10:45:09.459" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:09.459" level="INFO" html="true">20.01.22, 09:45:09	START		Running returnTheSameValue.script
20.01.22, 09:45:09	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:09 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:09	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:09.459" level="INFO">Return value:  Hello</msg>
<msg timestamp="20220120 10:45:09.459" level="INFO">${result} =  Hello</msg>
<status status="PASS" starttime="20220120 10:45:08.847" endtime="20220120 10:45:09.459"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:09.460" endtime="20220120 10:45:09.460"/>
</kw>
<status status="PASS" starttime="20220120 10:45:08.846" endtime="20220120 10:45:09.460"/>
</test>
<test id="s1-s1-s7-t11" name="Param ending with whitespace">
<kw name="Set Variable" library="BuiltIn">
<var>${string}</var>
<arg>Hello${SPACE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220120 10:45:09.463" level="INFO">${string} = Hello </msg>
<status status="PASS" starttime="20220120 10:45:09.462" endtime="20220120 10:45:09.463"/>
</kw>
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${result}</var>
<arg>${string}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:09.463" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", "Hello ",'</msg>
<msg timestamp="20220120 10:45:10.098" level="INFO">Execution duration: 0.600999951363</msg>
<msg timestamp="20220120 10:45:10.098" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:10.098" level="INFO" html="true">20.01.22, 09:45:09	START		Running returnTheSameValue.script
20.01.22, 09:45:09	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:09 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:09	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:10.098" level="INFO">Return value: Hello </msg>
<msg timestamp="20220120 10:45:10.098" level="INFO">${result} = Hello </msg>
<status status="PASS" starttime="20220120 10:45:09.463" endtime="20220120 10:45:10.098"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:10.099" endtime="20220120 10:45:10.099"/>
</kw>
<status status="PASS" starttime="20220120 10:45:09.462" endtime="20220120 10:45:10.100"/>
</test>
<test id="s1-s1-s7-t12" name="List Params as String">
<kw name="List Params" library="EggplantLibrary">
<arg>("first", "second", "third")</arg>
<msg timestamp="20220120 10:45:10.102" level="INFO">Send command to eggPlant server: 'RunWithNewResults "listParams", ("first", "second", "third"),'</msg>
<msg timestamp="20220120 10:45:10.361" level="INFO">Execution duration: 0.233000040054</msg>
<msg timestamp="20220120 10:45:10.361" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:10.361" level="INFO" html="true">20.01.22, 09:45:10	START		Running listParams.script
first
second
third
20.01.22, 09:45:10	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:10 +0000", Successes:"1", TestCase:"listParams.script", Warnings:"0")
20.01.22, 09:45:10	SUCCESS		Execution Time 0:00:00 listParams.script
</msg>
<msg timestamp="20220120 10:45:10.362" level="INFO">Return value: </msg>
<status status="PASS" starttime="20220120 10:45:10.102" endtime="20220120 10:45:10.362"/>
</kw>
<status status="PASS" starttime="20220120 10:45:10.101" endtime="20220120 10:45:10.362"/>
</test>
<test id="s1-s1-s7-t13" name="List Params as List">
<kw name="List Params" library="EggplantLibrary">
<arg>${Packed List}</arg>
<msg timestamp="20220120 10:45:10.364" level="INFO">Send command to eggPlant server: 'RunWithNewResults "listParams", ["Value1", "Value2", "Value3"],'</msg>
<msg timestamp="20220120 10:45:10.533" level="INFO">Execution duration: 0.136000037193</msg>
<msg timestamp="20220120 10:45:10.533" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:10.533" level="INFO" html="true">20.01.22, 09:45:10	START		Running listParams.script
Value1
Value2
Value3
20.01.22, 09:45:10	EndTestCase		(Duration:"0.002", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:10 +0000", Successes:"1", TestCase:"listParams.script", Warnings:"0")
20.01.22, 09:45:10	SUCCESS		Execution Time 0:00:00 listParams.script
</msg>
<msg timestamp="20220120 10:45:10.533" level="INFO">Return value: </msg>
<status status="PASS" starttime="20220120 10:45:10.364" endtime="20220120 10:45:10.533"/>
</kw>
<status status="PASS" starttime="20220120 10:45:10.364" endtime="20220120 10:45:10.534"/>
</test>
<test id="s1-s1-s7-t14" name="String params with special characters">
<kw name="Several Params" library="EggplantLibrary">
<arg>ört ?yz+5g</arg>
<arg>"second param"</arg>
<arg>third</arg>
<doc> multiline 1
multiline inside</doc>
<msg timestamp="20220120 10:45:10.537" level="INFO">Send command to eggPlant server: 'RunWithNewResults "severalParams", "ört ?yz+5g", "second param", "third",'</msg>
<msg timestamp="20220120 10:45:10.776" level="INFO">Execution duration: 0.226999998093</msg>
<msg timestamp="20220120 10:45:10.776" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:10.776" level="INFO" html="true">20.01.22, 09:45:10	START		Running severalParams.script
ört ?yz+5g
second param
third
20.01.22, 09:45:10	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:10 +0000", Successes:"1", TestCase:"severalParams.script", Warnings:"0")
20.01.22, 09:45:10	SUCCESS		Execution Time 0:00:00 severalParams.script
</msg>
<msg timestamp="20220120 10:45:10.777" level="INFO">Return value: </msg>
<status status="PASS" starttime="20220120 10:45:10.537" endtime="20220120 10:45:10.777"/>
</kw>
<status status="PASS" starttime="20220120 10:45:10.536" endtime="20220120 10:45:10.777"/>
</test>
<test id="s1-s1-s7-t15" name="Params search in scripts should be case insensitive">
<kw name="Params Capital Letters" library="EggplantLibrary">
<arg>let me entertain you</arg>
<msg timestamp="20220120 10:45:10.779" level="INFO">Send command to eggPlant server: 'RunWithNewResults "paramsCapitalLetters", "let me entertain you",'</msg>
<msg timestamp="20220120 10:45:10.975" level="INFO">Execution duration: 0.175000071526</msg>
<msg timestamp="20220120 10:45:10.975" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:10.975" level="INFO" html="true">20.01.22, 09:45:10	START		Running paramsCapitalLetters.script
20.01.22, 09:45:10	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:10 +0000", Successes:"1", TestCase:"paramsCapitalLetters.script", Warnings:"0")
20.01.22, 09:45:10	SUCCESS		Execution Time 0:00:00 paramsCapitalLetters.script
</msg>
<msg timestamp="20220120 10:45:10.975" level="INFO">Return value: </msg>
<status status="PASS" starttime="20220120 10:45:10.779" endtime="20220120 10:45:10.975"/>
</kw>
<status status="PASS" starttime="20220120 10:45:10.779" endtime="20220120 10:45:10.975"/>
</test>
<test id="s1-s1-s7-t16" name="Packed list params">
<kw name="Packed List Params" library="EggplantLibrary">
<var>@{result list}</var>
<arg>${Expected List}[0]</arg>
<arg>${Expected List}[1]</arg>
<arg>${Expected List}[2]</arg>
<arg>${Packed List}</arg>
<msg timestamp="20220120 10:45:10.977" level="INFO">Send command to eggPlant server: 'RunWithNewResults "packedListParams", "Hello", "World", "Anybody here?", ["Value1", "Value2", "Value3"],'</msg>
<msg timestamp="20220120 10:45:11.162" level="INFO">Execution duration: 0.162000060081</msg>
<msg timestamp="20220120 10:45:11.162" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:11.162" level="INFO" html="true">20.01.22, 09:45:11	START		Running packedListParams.script
20.01.22, 09:45:11	Log		Anzahl: 1
20.01.22, 09:45:11	EndTestCase		(Duration:"0.007", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:11 +0000", Successes:"1", TestCase:"packedListParams.script", Warnings:"0")
20.01.22, 09:45:11	SUCCESS		Execution Time 0:00:00 packedListParams.script
</msg>
<msg timestamp="20220120 10:45:11.162" level="INFO">Return value: ["Hello","World","Anybody here?",["Value1","Value2","Value3"]]</msg>
<msg timestamp="20220120 10:45:11.162" level="INFO">@{result list} = [ Hello | World | Anybody here? | ['Value1', 'Value2', 'Value3'] ]</msg>
<status status="PASS" starttime="20220120 10:45:10.977" endtime="20220120 10:45:11.162"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result list}</arg>
<arg>${Expected List}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:11.163" endtime="20220120 10:45:11.163"/>
</kw>
<status status="PASS" starttime="20220120 10:45:10.976" endtime="20220120 10:45:11.164"/>
</test>
<test id="s1-s1-s7-t17" name="Multiline Param - New Line Character">
<kw name="Return Multiline Value" library="EggplantLibrary">
<var>${Multiline result}</var>
<arg>${Multiline param N}</arg>
<msg timestamp="20220120 10:45:11.166" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnMultilineValue", "Hello" &amp; return &amp; "World",'</msg>
<msg timestamp="20220120 10:45:11.393" level="INFO">Execution duration: 0.204999923706</msg>
<msg timestamp="20220120 10:45:11.393" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:11.393" level="INFO" html="true">20.01.22, 09:45:11	START		Running returnMultilineValue.script
20.01.22, 09:45:11	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:11 +0000", Successes:"1", TestCase:"returnMultilineValue.script", Warnings:"0")
20.01.22, 09:45:11	SUCCESS		Execution Time 0:00:00 returnMultilineValue.script
</msg>
<msg timestamp="20220120 10:45:11.393" level="INFO">Return value: Hello
World
New line</msg>
<msg timestamp="20220120 10:45:11.393" level="INFO">${Multiline result} = Hello
World
New line</msg>
<status status="PASS" starttime="20220120 10:45:11.166" endtime="20220120 10:45:11.393"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Multiline result}</arg>
<arg>${Multiline expected result}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:11.393" endtime="20220120 10:45:11.393"/>
</kw>
<doc>The '\r' and '\n' characters in RF are converted to the eggPlant specific 'return' character.
The eggPlant script adds one more 'return', which is equal to '\n' when it comes back to RF.</doc>
<status status="PASS" starttime="20220120 10:45:11.164" endtime="20220120 10:45:11.394"/>
</test>
<test id="s1-s1-s7-t18" name="Multiline Param - Return Character">
<kw name="Return Multiline Value" library="EggplantLibrary">
<var>${Multiline result}</var>
<arg>${Multiline param R}</arg>
<msg timestamp="20220120 10:45:11.396" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnMultilineValue", "Hello" &amp; return &amp; "World",'</msg>
<msg timestamp="20220120 10:45:11.521" level="INFO">Execution duration: 0.101999998093</msg>
<msg timestamp="20220120 10:45:11.521" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:11.521" level="INFO" html="true">20.01.22, 09:45:11	START		Running returnMultilineValue.script
20.01.22, 09:45:11	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:11 +0000", Successes:"1", TestCase:"returnMultilineValue.script", Warnings:"0")
20.01.22, 09:45:11	SUCCESS		Execution Time 0:00:00 returnMultilineValue.script
</msg>
<msg timestamp="20220120 10:45:11.521" level="INFO">Return value: Hello
World
New line</msg>
<msg timestamp="20220120 10:45:11.521" level="INFO">${Multiline result} = Hello
World
New line</msg>
<status status="PASS" starttime="20220120 10:45:11.396" endtime="20220120 10:45:11.521"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Multiline result}</arg>
<arg>${Multiline expected result}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:11.522" endtime="20220120 10:45:11.522"/>
</kw>
<doc>The '\r' and '\n' characters in RF are converted to the eggPlant specific 'return' character.
The eggPlant script adds one more 'return', which is equal to '\n' when it comes back to RF.</doc>
<status status="PASS" starttime="20220120 10:45:11.395" endtime="20220120 10:45:11.523"/>
</test>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:45:11.524" endtime="20220120 10:45:11.556"/>
</kw>
<status status="PASS" starttime="20220120 10:45:03.873" endtime="20220120 10:45:11.556"/>
</suite>
<suite id="s1-s1-s8" name="Params Named Default" source="D:\DEV\robotframework-eggplant\tests\tests\Params_Named_Default.robot">
<kw name="Open Session" library="EggplantLibrary" type="SETUP">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:45:11.623" level="INFO">Send command to eggPlant server: 'if EggplantVersion().eggplant &lt; "21.1.0" then LogWarning !"Incompatible eggplant version detected - [[EggplantVersion().eggplant]]. Min. version required - 21.1.0. See README for more information."'</msg>
<msg timestamp="20220120 10:45:11.664" level="INFO">Execution duration: 0.0</msg>
<msg timestamp="20220120 10:45:11.664" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:11.665" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:11.665" level="INFO">Return value: {'Duration': 0.006999969482, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/returnMultilineValue/20220120_094511.252/LogFile.txt', 'ReturnValue': 'Hello\nWorld\nNew line', 'RunDate': &lt;DateTime '20220120T09:45:11' at 0x2cea9cec9a0&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<status status="PASS" starttime="20220120 10:45:11.563" endtime="20220120 10:45:11.665"/>
</kw>
<test id="s1-s1-s8-t1" name="Positional argument only">
<kw name="Create List" library="BuiltIn">
<var>@{arguments}</var>
<arg>some value</arg>
<arg>${123}</arg>
<arg>${True}</arg>
<arg>hello</arg>
<arg>hello world</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:11.667" level="INFO">@{arguments} = [ some value | 123 | True | hello | hello world ]</msg>
<status status="PASS" starttime="20220120 10:45:11.666" endtime="20220120 10:45:11.667"/>
</kw>
<kw name="Default Params" library="EggplantLibrary">
<var>@{result}</var>
<arg>some value</arg>
<doc> Testing new default arguments option</doc>
<msg timestamp="20220120 10:45:11.668" level="INFO">Send command to eggPlant server: 'RunWithNewResults "defaultParams", "some value",'</msg>
<msg timestamp="20220120 10:45:12.162" level="INFO">Execution duration: 0.467000007629</msg>
<msg timestamp="20220120 10:45:12.162" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:12.162" level="INFO" html="true">20.01.22, 09:45:11	START		Running defaultParams.script
20.01.22, 09:45:11	Log		["some value",123,"True","hello","hello world"]
20.01.22, 09:45:11	EndTestCase		(Duration:"0.005", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:11 +0000", Successes:"1", TestCase:"defaultParams.script", Warnings:"0")
20.01.22, 09:45:11	SUCCESS		Execution Time 0:00:00 defaultParams.script
</msg>
<msg timestamp="20220120 10:45:12.164" level="INFO">Return value: ["some value",123,"True","hello","hello world"]</msg>
<msg timestamp="20220120 10:45:12.164" level="INFO">@{result} = [ some value | 123 | True | hello | hello world ]</msg>
<status status="PASS" starttime="20220120 10:45:11.667" endtime="20220120 10:45:12.164"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${arguments}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:12.164" endtime="20220120 10:45:12.164"/>
</kw>
<status status="PASS" starttime="20220120 10:45:11.665" endtime="20220120 10:45:12.164"/>
</test>
<test id="s1-s1-s8-t2" name="Positional argument as named arguement">
<kw name="Create List" library="BuiltIn">
<var>@{arguments}</var>
<arg>some value</arg>
<arg>${123}</arg>
<arg>${True}</arg>
<arg>hello</arg>
<arg>hello world</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:12.168" level="INFO">@{arguments} = [ some value | 123 | True | hello | hello world ]</msg>
<status status="PASS" starttime="20220120 10:45:12.167" endtime="20220120 10:45:12.168"/>
</kw>
<kw name="Default Params" library="EggplantLibrary">
<var>@{result}</var>
<arg>positional_arg_no_default=some value</arg>
<doc> Testing new default arguments option</doc>
<msg timestamp="20220120 10:45:12.169" level="INFO">Send command to eggPlant server: 'RunWithNewResults "defaultParams", "some value",'</msg>
<msg timestamp="20220120 10:45:12.430" level="INFO">Execution duration: 0.235999941826</msg>
<msg timestamp="20220120 10:45:12.430" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:12.430" level="INFO" html="true">20.01.22, 09:45:12	START		Running defaultParams.script
20.01.22, 09:45:12	Log		["some value",123,"True","hello","hello world"]
20.01.22, 09:45:12	EndTestCase		(Duration:"0.005", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:12 +0000", Successes:"1", TestCase:"defaultParams.script", Warnings:"0")
20.01.22, 09:45:12	SUCCESS		Execution Time 0:00:00 defaultParams.script
</msg>
<msg timestamp="20220120 10:45:12.430" level="INFO">Return value: ["some value",123,"True","hello","hello world"]</msg>
<msg timestamp="20220120 10:45:12.431" level="INFO">@{result} = [ some value | 123 | True | hello | hello world ]</msg>
<status status="PASS" starttime="20220120 10:45:12.169" endtime="20220120 10:45:12.431"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${arguments}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:12.431" endtime="20220120 10:45:12.432"/>
</kw>
<status status="PASS" starttime="20220120 10:45:12.166" endtime="20220120 10:45:12.432"/>
</test>
<test id="s1-s1-s8-t3" name="Default value - int">
<kw name="Create List" library="BuiltIn">
<var>@{arguments}</var>
<arg>some value</arg>
<arg>${456}</arg>
<arg>${True}</arg>
<arg>hello</arg>
<arg>hello world</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:12.435" level="INFO">@{arguments} = [ some value | 456 | True | hello | hello world ]</msg>
<status status="PASS" starttime="20220120 10:45:12.434" endtime="20220120 10:45:12.435"/>
</kw>
<kw name="Default Params" library="EggplantLibrary">
<var>@{result}</var>
<arg>some value</arg>
<arg>arg_int=${456}</arg>
<doc> Testing new default arguments option</doc>
<msg timestamp="20220120 10:45:12.436" level="INFO">Send command to eggPlant server: 'RunWithNewResults "defaultParams", "some value", 456,'</msg>
<msg timestamp="20220120 10:45:12.762" level="INFO">Execution duration: 0.289999961853</msg>
<msg timestamp="20220120 10:45:12.762" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:12.762" level="INFO" html="true">20.01.22, 09:45:12	START		Running defaultParams.script
20.01.22, 09:45:12	Log		["some value",456,"True","hello","hello world"]
20.01.22, 09:45:12	EndTestCase		(Duration:"0.006", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:12 +0000", Successes:"1", TestCase:"defaultParams.script", Warnings:"0")
20.01.22, 09:45:12	SUCCESS		Execution Time 0:00:00 defaultParams.script
</msg>
<msg timestamp="20220120 10:45:12.762" level="INFO">Return value: ["some value",456,"True","hello","hello world"]</msg>
<msg timestamp="20220120 10:45:12.762" level="INFO">@{result} = [ some value | 456 | True | hello | hello world ]</msg>
<status status="PASS" starttime="20220120 10:45:12.436" endtime="20220120 10:45:12.762"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${arguments}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:12.763" endtime="20220120 10:45:12.763"/>
</kw>
<status status="PASS" starttime="20220120 10:45:12.434" endtime="20220120 10:45:12.764"/>
</test>
<test id="s1-s1-s8-t4" name="Default value - bool">
<kw name="Create List" library="BuiltIn">
<var>@{arguments}</var>
<arg>some value</arg>
<arg>${123}</arg>
<arg>${False}</arg>
<arg>hello</arg>
<arg>hello world</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:12.766" level="INFO">@{arguments} = [ some value | 123 | False | hello | hello world ]</msg>
<status status="PASS" starttime="20220120 10:45:12.766" endtime="20220120 10:45:12.767"/>
</kw>
<kw name="Default Params" library="EggplantLibrary">
<var>@{result}</var>
<arg>some value</arg>
<arg>arg_bool=${False}</arg>
<doc> Testing new default arguments option</doc>
<msg timestamp="20220120 10:45:12.767" level="INFO">Send command to eggPlant server: 'RunWithNewResults "defaultParams", "some value", 123, False,'</msg>
<msg timestamp="20220120 10:45:13.031" level="INFO">Execution duration: 0.248000025749</msg>
<msg timestamp="20220120 10:45:13.031" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:13.031" level="INFO" html="true">20.01.22, 09:45:12	START		Running defaultParams.script
20.01.22, 09:45:12	Log		["some value",123,"False","hello","hello world"]
20.01.22, 09:45:12	EndTestCase		(Duration:"0.008", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:12 +0000", Successes:"1", TestCase:"defaultParams.script", Warnings:"0")
20.01.22, 09:45:12	SUCCESS		Execution Time 0:00:00 defaultParams.script
</msg>
<msg timestamp="20220120 10:45:13.031" level="INFO">Return value: ["some value",123,"False","hello","hello world"]</msg>
<msg timestamp="20220120 10:45:13.032" level="INFO">@{result} = [ some value | 123 | False | hello | hello world ]</msg>
<status status="PASS" starttime="20220120 10:45:12.767" endtime="20220120 10:45:13.032"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${arguments}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:13.032" endtime="20220120 10:45:13.033"/>
</kw>
<status status="PASS" starttime="20220120 10:45:12.765" endtime="20220120 10:45:13.034"/>
</test>
<test id="s1-s1-s8-t5" name="Default value - string">
<kw name="Create List" library="BuiltIn">
<var>@{arguments}</var>
<arg>some value</arg>
<arg>${123}</arg>
<arg>${True}</arg>
<arg>Skywalker</arg>
<arg>hello world</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:13.037" level="INFO">@{arguments} = [ some value | 123 | True | Skywalker | hello world ]</msg>
<status status="PASS" starttime="20220120 10:45:13.036" endtime="20220120 10:45:13.037"/>
</kw>
<kw name="Default Params" library="EggplantLibrary">
<var>@{result}</var>
<arg>some value</arg>
<arg>arg_string=Skywalker</arg>
<doc> Testing new default arguments option</doc>
<msg timestamp="20220120 10:45:13.038" level="INFO">Send command to eggPlant server: 'RunWithNewResults "defaultParams", "some value", 123, True, "Skywalker",'</msg>
<msg timestamp="20220120 10:45:13.309" level="INFO">Execution duration: 0.248000025749</msg>
<msg timestamp="20220120 10:45:13.309" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:13.309" level="INFO" html="true">20.01.22, 09:45:13	START		Running defaultParams.script
20.01.22, 09:45:13	Log		["some value",123,"True","Skywalker","hello world"]
20.01.22, 09:45:13	EndTestCase		(Duration:"0.005", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:13 +0000", Successes:"1", TestCase:"defaultParams.script", Warnings:"0")
20.01.22, 09:45:13	SUCCESS		Execution Time 0:00:00 defaultParams.script
</msg>
<msg timestamp="20220120 10:45:13.309" level="INFO">Return value: ["some value",123,"True","Skywalker","hello world"]</msg>
<msg timestamp="20220120 10:45:13.309" level="INFO">@{result} = [ some value | 123 | True | Skywalker | hello world ]</msg>
<status status="PASS" starttime="20220120 10:45:13.037" endtime="20220120 10:45:13.309"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${arguments}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:13.310" endtime="20220120 10:45:13.310"/>
</kw>
<status status="PASS" starttime="20220120 10:45:13.035" endtime="20220120 10:45:13.311"/>
</test>
<test id="s1-s1-s8-t6" name="Default value - string with spaces">
<kw name="Create List" library="BuiltIn">
<var>@{arguments}</var>
<arg>some value</arg>
<arg>${123}</arg>
<arg>${True}</arg>
<arg>hello</arg>
<arg>I am your father</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:13.313" level="INFO">@{arguments} = [ some value | 123 | True | hello | I am your father ]</msg>
<status status="PASS" starttime="20220120 10:45:13.313" endtime="20220120 10:45:13.313"/>
</kw>
<kw name="Default Params" library="EggplantLibrary">
<var>@{result}</var>
<arg>some value</arg>
<arg>arg_string_with_space=I am your father</arg>
<doc> Testing new default arguments option</doc>
<msg timestamp="20220120 10:45:13.314" level="INFO">Send command to eggPlant server: 'RunWithNewResults "defaultParams", "some value", 123, True, "hello", "I am your father",'</msg>
<msg timestamp="20220120 10:45:13.585" level="INFO">Execution duration: 0.244000077248</msg>
<msg timestamp="20220120 10:45:13.585" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:13.585" level="INFO" html="true">20.01.22, 09:45:13	START		Running defaultParams.script
20.01.22, 09:45:13	Log		["some value",123,"True","hello","I am your father"]
20.01.22, 09:45:13	EndTestCase		(Duration:"0.005", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:13 +0000", Successes:"1", TestCase:"defaultParams.script", Warnings:"0")
20.01.22, 09:45:13	SUCCESS		Execution Time 0:00:00 defaultParams.script
</msg>
<msg timestamp="20220120 10:45:13.585" level="INFO">Return value: ["some value",123,"True","hello","I am your father"]</msg>
<msg timestamp="20220120 10:45:13.585" level="INFO">@{result} = [ some value | 123 | True | hello | I am your father ]</msg>
<status status="PASS" starttime="20220120 10:45:13.314" endtime="20220120 10:45:13.585"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${arguments}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:13.586" endtime="20220120 10:45:13.587"/>
</kw>
<status status="PASS" starttime="20220120 10:45:13.312" endtime="20220120 10:45:13.587"/>
</test>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:45:13.589" endtime="20220120 10:45:13.634"/>
</kw>
<status status="PASS" starttime="20220120 10:45:11.559" endtime="20220120 10:45:13.634"/>
</suite>
<suite id="s1-s1-s9" name="Return" source="D:\DEV\robotframework-eggplant\tests\tests\Return">
<suite id="s1-s1-s9-s1" name="LegacyLists" source="D:\DEV\robotframework-eggplant\tests\tests\Return\LegacyLists.robot">
<kw name="Open Session" library="EggplantLibrary" type="SETUP">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:45:13.704" level="INFO">Send command to eggPlant server: 'if EggplantVersion().eggplant &lt; "21.1.0" then LogWarning !"Incompatible eggplant version detected - [[EggplantVersion().eggplant]]. Min. version required - 21.1.0. See README for more information."'</msg>
<msg timestamp="20220120 10:45:13.756" level="INFO">Execution duration: 0.00100004673</msg>
<msg timestamp="20220120 10:45:13.756" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:13.756" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:13.756" level="INFO">Return value: {'Duration': 0.012000083923, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/defaultParams/20220120_094512.644/LogFile.txt', 'ReturnValue': '["some value",123,"True","hello","I am your father"]', 'RunDate': &lt;DateTime '20220120T09:45:13' at 0x2cea9e6e4f0&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<status status="PASS" starttime="20220120 10:45:13.646" endtime="20220120 10:45:13.757"/>
</kw>
<test id="s1-s1-s9-s1-t1" name="Simple List Return">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1}</arg>
<arg>${2}</arg>
<arg>${3}</arg>
<arg>${4}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:13.758" level="INFO">@{expected} = [ 1 | 2 | 3 | 4 ]</msg>
<status status="PASS" starttime="20220120 10:45:13.757" endtime="20220120 10:45:13.759"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:13.759" level="INFO">List length is 4 and it contains following items:
0: 1
1: 2
2: 3
3: 4</msg>
<status status="PASS" starttime="20220120 10:45:13.759" endtime="20220120 10:45:13.759"/>
</kw>
<kw name="Legacy Lists.return List" library="EggplantLibrary">
<var>${l}</var>
<msg timestamp="20220120 10:45:13.760" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnList",'</msg>
<msg timestamp="20220120 10:45:13.930" level="INFO">Execution duration: 0.143999934196</msg>
<msg timestamp="20220120 10:45:13.930" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:13.930" level="INFO" html="true">20.01.22, 09:45:13	START		Running LegacyLists/returnList.script
20.01.22, 09:45:13	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:13 +0000", Successes:"1", TestCase:"LegacyLists/returnList.script", Warnings:"0")
20.01.22, 09:45:13	SUCCESS		Execution Time 0:00:00 LegacyLists/returnList.script
</msg>
<msg timestamp="20220120 10:45:13.930" level="INFO">Return value: [1,2,3,4]</msg>
<msg timestamp="20220120 10:45:13.930" level="INFO">${l} = [1, 2, 3, 4]</msg>
<status status="PASS" starttime="20220120 10:45:13.760" endtime="20220120 10:45:13.930"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:13.931" endtime="20220120 10:45:13.931"/>
</kw>
<status status="PASS" starttime="20220120 10:45:13.757" endtime="20220120 10:45:13.932"/>
</test>
<test id="s1-s1-s9-s1-t2" name="List with new line in the value">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>Value 1</arg>
<arg>Value\n2</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:13.935" level="INFO">@{expected} = [ Value 1 | Value
2 ]</msg>
<status status="PASS" starttime="20220120 10:45:13.935" endtime="20220120 10:45:13.935"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:13.936" level="INFO">List length is 2 and it contains following items:
0: Value 1
1: Value
2</msg>
<status status="PASS" starttime="20220120 10:45:13.936" endtime="20220120 10:45:13.936"/>
</kw>
<kw name="Legacy Lists.return List With New Line In The Value" library="EggplantLibrary">
<var>@{l}</var>
<msg timestamp="20220120 10:45:13.937" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnListWithNewLineInTheValue",'</msg>
<msg timestamp="20220120 10:45:14.120" level="INFO">Execution duration: 0.156999945641</msg>
<msg timestamp="20220120 10:45:14.120" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:14.120" level="INFO" html="true">20.01.22, 09:45:14	START		Running LegacyLists/returnListWithNewLineInTheValue.script
20.01.22, 09:45:14	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:14 +0000", Successes:"1", TestCase:"LegacyLists/returnListWithNewLineInTheValue.script", Warnings:"0")
20.01.22, 09:45:14	SUCCESS		Execution Time 0:00:00 LegacyLists/returnListWithNewLineInTheValue.script
</msg>
<msg timestamp="20220120 10:45:14.120" level="INFO">Return value: ["Value 1",@"Value\n2"]</msg>
<msg timestamp="20220120 10:45:14.120" level="INFO">@{l} = [ Value 1 | Value
2 ]</msg>
<status status="PASS" starttime="20220120 10:45:13.937" endtime="20220120 10:45:14.120"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:14.121" endtime="20220120 10:45:14.121"/>
</kw>
<status status="PASS" starttime="20220120 10:45:13.934" endtime="20220120 10:45:14.122"/>
</test>
<test id="s1-s1-s9-s1-t3" name="List with single value">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>single_value</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:14.124" level="INFO">@{expected} = [ single_value ]</msg>
<status status="PASS" starttime="20220120 10:45:14.123" endtime="20220120 10:45:14.124"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:14.125" level="INFO">List has one item:
single_value</msg>
<status status="PASS" starttime="20220120 10:45:14.125" endtime="20220120 10:45:14.125"/>
</kw>
<kw name="Legacy Lists.return List Single Value" library="EggplantLibrary">
<var>@{l}</var>
<msg timestamp="20220120 10:45:14.126" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnListSingleValue",'</msg>
<msg timestamp="20220120 10:45:14.302" level="INFO">Execution duration: 0.154000043869</msg>
<msg timestamp="20220120 10:45:14.302" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:14.302" level="INFO" html="true">20.01.22, 09:45:14	START		Running LegacyLists/returnListSingleValue.script
20.01.22, 09:45:14	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:14 +0000", Successes:"1", TestCase:"LegacyLists/returnListSingleValue.script", Warnings:"0")
20.01.22, 09:45:14	SUCCESS		Execution Time 0:00:00 LegacyLists/returnListSingleValue.script
</msg>
<msg timestamp="20220120 10:45:14.302" level="INFO">Return value: ["single_value"]</msg>
<msg timestamp="20220120 10:45:14.302" level="INFO">@{l} = [ single_value ]</msg>
<status status="PASS" starttime="20220120 10:45:14.126" endtime="20220120 10:45:14.302"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:14.302" endtime="20220120 10:45:14.303"/>
</kw>
<status status="PASS" starttime="20220120 10:45:14.123" endtime="20220120 10:45:14.303"/>
</test>
<test id="s1-s1-s9-s1-t4" name="List with bools">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${False}</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:14.306" level="INFO">@{expected} = [ False | True | False ]</msg>
<status status="PASS" starttime="20220120 10:45:14.305" endtime="20220120 10:45:14.306"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:14.306" level="INFO">List length is 3 and it contains following items:
0: False
1: True
2: False</msg>
<status status="PASS" starttime="20220120 10:45:14.306" endtime="20220120 10:45:14.306"/>
</kw>
<kw name="Legacy Lists.return List With Bools" library="EggplantLibrary">
<var>${l}</var>
<msg timestamp="20220120 10:45:14.307" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnListWithBools",'</msg>
<msg timestamp="20220120 10:45:14.485" level="INFO">Execution duration: 0.15499997139</msg>
<msg timestamp="20220120 10:45:14.485" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:14.485" level="INFO" html="true">20.01.22, 09:45:14	START		Running LegacyLists/returnListWithBools.script
20.01.22, 09:45:14	EndTestCase		(Duration:"0.002", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:14 +0000", Successes:"1", TestCase:"LegacyLists/returnListWithBools.script", Warnings:"0")
20.01.22, 09:45:14	SUCCESS		Execution Time 0:00:00 LegacyLists/returnListWithBools.script
</msg>
<msg timestamp="20220120 10:45:14.485" level="INFO">Return value: ["False","True","False"]</msg>
<msg timestamp="20220120 10:45:14.486" level="INFO">${l} = [False, True, False]</msg>
<status status="PASS" starttime="20220120 10:45:14.307" endtime="20220120 10:45:14.486"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:14.486" endtime="20220120 10:45:14.487"/>
</kw>
<doc>Change in eggPlant 21.2.0 - bool values inside a list get quoted
[false, true] --&gt; ["False", "True"]</doc>
<status status="PASS" starttime="20220120 10:45:14.305" endtime="20220120 10:45:14.487"/>
</test>
<test id="s1-s1-s9-s1-t5" name="List with a float value">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1}</arg>
<arg>${2}</arg>
<arg>${3.14}</arg>
<arg>${4}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:14.490" level="INFO">@{expected} = [ 1 | 2 | 3.14 | 4 ]</msg>
<status status="PASS" starttime="20220120 10:45:14.488" endtime="20220120 10:45:14.490"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:14.490" level="INFO">List length is 4 and it contains following items:
0: 1
1: 2
2: 3.14
3: 4</msg>
<status status="PASS" starttime="20220120 10:45:14.490" endtime="20220120 10:45:14.490"/>
</kw>
<kw name="Legacy Lists.return List With Argument" library="EggplantLibrary">
<var>${l}</var>
<arg>${3.14}</arg>
<doc> Returns a simple list with the argument inside - as a third value
 Return (1,2,my_value,4)</doc>
<msg timestamp="20220120 10:45:14.491" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnListWithArgument", 3.14,'</msg>
<msg timestamp="20220120 10:45:14.685" level="INFO">Execution duration: 0.164000034332</msg>
<msg timestamp="20220120 10:45:14.685" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:14.685" level="INFO" html="true">20.01.22, 09:45:14	START		Running LegacyLists/returnListWithArgument.script
20.01.22, 09:45:14	EndTestCase		(Duration:"0.002", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:14 +0000", Successes:"1", TestCase:"LegacyLists/returnListWithArgument.script", Warnings:"0")
20.01.22, 09:45:14	SUCCESS		Execution Time 0:00:00 LegacyLists/returnListWithArgument.script
</msg>
<msg timestamp="20220120 10:45:14.685" level="INFO">Return value: [1,2,3.14,4]</msg>
<msg timestamp="20220120 10:45:14.685" level="INFO">${l} = [1, 2, 3.14, 4]</msg>
<status status="PASS" starttime="20220120 10:45:14.491" endtime="20220120 10:45:14.686"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:14.686" endtime="20220120 10:45:14.687"/>
</kw>
<status status="PASS" starttime="20220120 10:45:14.488" endtime="20220120 10:45:14.687"/>
</test>
<test id="s1-s1-s9-s1-t6" name="List With Brackets In String Middle">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1234}</arg>
<arg>${Some string with brackets}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:14.690" level="INFO">@{expected} = [ 1234 | Au (Sieg) - Düren Pbf ]</msg>
<status status="PASS" starttime="20220120 10:45:14.689" endtime="20220120 10:45:14.690"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:14.691" level="INFO">List length is 2 and it contains following items:
0: 1234
1: Au (Sieg) - Düren Pbf</msg>
<status status="PASS" starttime="20220120 10:45:14.690" endtime="20220120 10:45:14.691"/>
</kw>
<kw name="Legacy Lists.return List With Brackets In String" library="EggplantLibrary">
<var>@{l}</var>
<arg>${Some string with brackets}</arg>
<msg timestamp="20220120 10:45:14.692" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnListWithBracketsInString", "Au (Sieg) - Düren Pbf",'</msg>
<msg timestamp="20220120 10:45:15.032" level="INFO">Execution duration: 0.326000094414</msg>
<msg timestamp="20220120 10:45:15.032" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:15.032" level="INFO" html="true">20.01.22, 09:45:14	START		Running LegacyLists/returnListWithBracketsInString.script
20.01.22, 09:45:14	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:14 +0000", Successes:"1", TestCase:"LegacyLists/returnListWithBracketsInString.script", Warnings:"0")
20.01.22, 09:45:14	SUCCESS		Execution Time 0:00:00 LegacyLists/returnListWithBracketsInString.script
</msg>
<msg timestamp="20220120 10:45:15.032" level="INFO">Return value: [1234,"Au (Sieg) - Düren Pbf"]</msg>
<msg timestamp="20220120 10:45:15.032" level="INFO">@{l} = [ 1234 | Au (Sieg) - Düren Pbf ]</msg>
<status status="PASS" starttime="20220120 10:45:14.691" endtime="20220120 10:45:15.032"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:15.033" endtime="20220120 10:45:15.035"/>
</kw>
<status status="PASS" starttime="20220120 10:45:14.688" endtime="20220120 10:45:15.035"/>
</test>
<test id="s1-s1-s9-s1-t7" name="List With Brackets In String End (List Middle)">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1234}</arg>
<arg>${Some string with last bracket}</arg>
<arg>ABC</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:15.039" level="INFO">@{expected} = [ 1234 | Saarbrücken Hbf - Neubrücke (Nahe) | ABC ]</msg>
<status status="PASS" starttime="20220120 10:45:15.038" endtime="20220120 10:45:15.040"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:15.040" level="INFO">List length is 3 and it contains following items:
0: 1234
1: Saarbrücken Hbf - Neubrücke (Nahe)
2: ABC</msg>
<status status="PASS" starttime="20220120 10:45:15.040" endtime="20220120 10:45:15.041"/>
</kw>
<kw name="Legacy Lists.return List With Brackets In String In Middle" library="EggplantLibrary">
<var>@{l}</var>
<arg>${Some string with last bracket}</arg>
<msg timestamp="20220120 10:45:15.042" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnListWithBracketsInStringInMiddle", "Saarbrücken Hbf - Neubrücke (Nahe)",'</msg>
<msg timestamp="20220120 10:45:15.215" level="INFO">Execution duration: 0.161000013351</msg>
<msg timestamp="20220120 10:45:15.215" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:15.215" level="INFO" html="true">20.01.22, 09:45:15	START		Running LegacyLists/returnListWithBracketsInStringInMiddle.script
20.01.22, 09:45:15	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:15 +0000", Successes:"1", TestCase:"LegacyLists/returnListWithBracketsInStringInMiddle.script", Warnings:"0")
20.01.22, 09:45:15	SUCCESS		Execution Time 0:00:00 LegacyLists/returnListWithBracketsInStringInMiddle.script
</msg>
<msg timestamp="20220120 10:45:15.215" level="INFO">Return value: [1234,"Saarbrücken Hbf - Neubrücke (Nahe)","ABC"]</msg>
<msg timestamp="20220120 10:45:15.215" level="INFO">@{l} = [ 1234 | Saarbrücken Hbf - Neubrücke (Nahe) | ABC ]</msg>
<status status="PASS" starttime="20220120 10:45:15.041" endtime="20220120 10:45:15.215"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:15.216" endtime="20220120 10:45:15.217"/>
</kw>
<status status="PASS" starttime="20220120 10:45:15.037" endtime="20220120 10:45:15.218"/>
</test>
<test id="s1-s1-s9-s1-t8" name="List With Brackets In String End (List End)">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1234}</arg>
<arg>${Some string with last bracket}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:15.221" level="INFO">@{expected} = [ 1234 | Saarbrücken Hbf - Neubrücke (Nahe) ]</msg>
<status status="PASS" starttime="20220120 10:45:15.220" endtime="20220120 10:45:15.221"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:15.221" level="INFO">List length is 2 and it contains following items:
0: 1234
1: Saarbrücken Hbf - Neubrücke (Nahe)</msg>
<status status="PASS" starttime="20220120 10:45:15.221" endtime="20220120 10:45:15.221"/>
</kw>
<kw name="Legacy Lists.return List With Brackets In String" library="EggplantLibrary">
<var>@{l}</var>
<arg>${Some string with last bracket}</arg>
<msg timestamp="20220120 10:45:15.222" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnListWithBracketsInString", "Saarbrücken Hbf - Neubrücke (Nahe)",'</msg>
<msg timestamp="20220120 10:45:15.408" level="INFO">Execution duration: 0.169000029564</msg>
<msg timestamp="20220120 10:45:15.408" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:15.408" level="INFO" html="true">20.01.22, 09:45:15	START		Running LegacyLists/returnListWithBracketsInString.script
20.01.22, 09:45:15	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:15 +0000", Successes:"1", TestCase:"LegacyLists/returnListWithBracketsInString.script", Warnings:"0")
20.01.22, 09:45:15	SUCCESS		Execution Time 0:00:00 LegacyLists/returnListWithBracketsInString.script
</msg>
<msg timestamp="20220120 10:45:15.408" level="INFO">Return value: [1234,"Saarbrücken Hbf - Neubrücke (Nahe)"]</msg>
<msg timestamp="20220120 10:45:15.408" level="INFO">@{l} = [ 1234 | Saarbrücken Hbf - Neubrücke (Nahe) ]</msg>
<status status="PASS" starttime="20220120 10:45:15.222" endtime="20220120 10:45:15.408"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:15.409" endtime="20220120 10:45:15.409"/>
</kw>
<status status="PASS" starttime="20220120 10:45:15.219" endtime="20220120 10:45:15.410"/>
</test>
<test id="s1-s1-s9-s1-t9" name="List With Closing Bracket ONLY In String End (List End)">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1234}</arg>
<arg>${Some string with closing bracket ONLY}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:15.412" level="INFO">@{expected} = [ 1234 | Saarbrücken Hbf - Neubrücke Nahe) ]</msg>
<status status="PASS" starttime="20220120 10:45:15.411" endtime="20220120 10:45:15.412"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:15.413" level="INFO">List length is 2 and it contains following items:
0: 1234
1: Saarbrücken Hbf - Neubrücke Nahe)</msg>
<status status="PASS" starttime="20220120 10:45:15.412" endtime="20220120 10:45:15.413"/>
</kw>
<kw name="Legacy Lists.return List With Brackets In String" library="EggplantLibrary">
<var>@{l}</var>
<arg>${Some string with closing bracket ONLY}</arg>
<msg timestamp="20220120 10:45:15.413" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnListWithBracketsInString", "Saarbrücken Hbf - Neubrücke Nahe)",'</msg>
<msg timestamp="20220120 10:45:16.322" level="INFO">Execution duration: 0.850000023842</msg>
<msg timestamp="20220120 10:45:16.322" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:16.323" level="INFO" html="true">20.01.22, 09:45:15	START		Running LegacyLists/returnListWithBracketsInString.script
20.01.22, 09:45:15	EndTestCase		(Duration:"0.006", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:15 +0000", Successes:"1", TestCase:"LegacyLists/returnListWithBracketsInString.script", Warnings:"0")
20.01.22, 09:45:15	SUCCESS		Execution Time 0:00:00 LegacyLists/returnListWithBracketsInString.script
</msg>
<msg timestamp="20220120 10:45:16.323" level="INFO">Return value: [1234,"Saarbrücken Hbf - Neubrücke Nahe)"]</msg>
<msg timestamp="20220120 10:45:16.324" level="INFO">@{l} = [ 1234 | Saarbrücken Hbf - Neubrücke Nahe) ]</msg>
<status status="PASS" starttime="20220120 10:45:15.413" endtime="20220120 10:45:16.325"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:16.327" endtime="20220120 10:45:16.329"/>
</kw>
<status status="PASS" starttime="20220120 10:45:15.411" endtime="20220120 10:45:16.332"/>
</test>
<test id="s1-s1-s9-s1-t10" name="List With Unpaired Closure Bracket And Open Brackets In String Middle">
<kw name="Create List" library="BuiltIn">
<var>@{Level 2}</var>
<arg>${1234}</arg>
<arg>he(llo)</arg>
<arg>abc)</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:16.345" level="INFO">@{Level 2} = [ 1234 | he(llo) | abc) ]</msg>
<status status="PASS" starttime="20220120 10:45:16.342" endtime="20220120 10:45:16.346"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>xyz</arg>
<arg>${Level 2}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:16.350" level="INFO">@{expected} = [ xyz | [1234, 'he(llo)', 'abc)'] ]</msg>
<status status="PASS" starttime="20220120 10:45:16.348" endtime="20220120 10:45:16.351"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:16.354" level="INFO">List length is 2 and it contains following items:
0: xyz
1: [1234, 'he(llo)', 'abc)']</msg>
<status status="PASS" starttime="20220120 10:45:16.352" endtime="20220120 10:45:16.354"/>
</kw>
<kw name="Legacy Lists.return List With Unpaired Closure Bracket And Open Brackets In String Middle" library="EggplantLibrary">
<var>@{l}</var>
<msg timestamp="20220120 10:45:16.358" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnListWithUnpairedClosureBracketAndOpenBracketsInStringMiddle",'</msg>
<msg timestamp="20220120 10:45:16.641" level="INFO">Execution duration: 0.151000022888</msg>
<msg timestamp="20220120 10:45:16.641" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:16.641" level="INFO" html="true">20.01.22, 09:45:16	START		Running LegacyLists/returnListWithUnpairedClosureBracketAndOpenBracketsInStringMiddle.script
20.01.22, 09:45:16	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:16 +0000", Successes:"1", TestCase:"LegacyLists/returnListWithUnpairedClosureBracketAndOpenBracketsInStringMiddle.script", Warnings:"0")
20.01.22, 09:45:16	SUCCESS		Execution Time 0:00:00 LegacyLists/returnListWithUnpairedClosureBracketAndOpenBracketsInStringMiddle.script
</msg>
<msg timestamp="20220120 10:45:16.641" level="INFO">Return value: ["xyz",[1234,"he(llo)","abc)"]]</msg>
<msg timestamp="20220120 10:45:16.642" level="INFO">@{l} = [ xyz | [1234, 'he(llo)', 'abc)'] ]</msg>
<status status="PASS" starttime="20220120 10:45:16.357" endtime="20220120 10:45:16.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:16.642" endtime="20220120 10:45:16.642"/>
</kw>
<status status="PASS" starttime="20220120 10:45:16.337" endtime="20220120 10:45:16.643"/>
</test>
<test id="s1-s1-s9-s1-t11" name="Nested List">
<kw name="Create List" library="BuiltIn">
<var>@{Level 3}</var>
<arg>alpha</arg>
<arg>beta</arg>
<arg>gamma</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:16.645" level="INFO">@{Level 3} = [ alpha | beta | gamma ]</msg>
<status status="PASS" starttime="20220120 10:45:16.644" endtime="20220120 10:45:16.645"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Level 2}</var>
<arg>A</arg>
<arg>B</arg>
<arg>${Level 3}</arg>
<arg>C</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:16.645" level="INFO">@{Level 2} = [ A | B | ['alpha', 'beta', 'gamma'] | C ]</msg>
<status status="PASS" starttime="20220120 10:45:16.645" endtime="20220120 10:45:16.645"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1}</arg>
<arg>${2}</arg>
<arg>${Level 2}</arg>
<arg>${3}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:16.648" level="INFO">@{expected} = [ 1 | 2 | ['A', 'B', ['alpha', 'beta', 'gamma'], 'C'] | 3 ]</msg>
<status status="PASS" starttime="20220120 10:45:16.646" endtime="20220120 10:45:16.648"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:16.649" level="INFO">List length is 4 and it contains following items:
0: 1
1: 2
2: ['A', 'B', ['alpha', 'beta', 'gamma'], 'C']
3: 3</msg>
<status status="PASS" starttime="20220120 10:45:16.648" endtime="20220120 10:45:16.649"/>
</kw>
<kw name="Legacy Lists.return Nested List" library="EggplantLibrary">
<var>${l}</var>
<msg timestamp="20220120 10:45:16.650" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnNestedList",'</msg>
<msg timestamp="20220120 10:45:16.813" level="INFO">Execution duration: 0.147000074387</msg>
<msg timestamp="20220120 10:45:16.813" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:16.813" level="INFO" html="true">20.01.22, 09:45:16	START		Running LegacyLists/returnNestedList.script
20.01.22, 09:45:16	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:16 +0000", Successes:"1", TestCase:"LegacyLists/returnNestedList.script", Warnings:"0")
20.01.22, 09:45:16	SUCCESS		Execution Time 0:00:00 LegacyLists/returnNestedList.script
</msg>
<msg timestamp="20220120 10:45:16.813" level="INFO">Return value: [1,2,["A","B",["alpha","beta","gamma"],"C"],3]</msg>
<msg timestamp="20220120 10:45:16.814" level="INFO">${l} = [1, 2, ['A', 'B', ['alpha', 'beta', 'gamma'], 'C'], 3]</msg>
<status status="PASS" starttime="20220120 10:45:16.649" endtime="20220120 10:45:16.814"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:16.814" endtime="20220120 10:45:16.815"/>
</kw>
<status status="PASS" starttime="20220120 10:45:16.644" endtime="20220120 10:45:16.815"/>
</test>
<test id="s1-s1-s9-s1-t12" name="Special Nested List">
<kw name="Create List" library="BuiltIn">
<var>@{Level 3 I}</var>
<arg>${33}</arg>
<arg>${34}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:16.817" level="INFO">@{Level 3 I} = [ 33 | 34 ]</msg>
<status status="PASS" starttime="20220120 10:45:16.817" endtime="20220120 10:45:16.817"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Level 3 II}</var>
<arg>bla</arg>
<arg>bla</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:16.818" level="INFO">@{Level 3 II} = [ bla | bla ]</msg>
<status status="PASS" starttime="20220120 10:45:16.818" endtime="20220120 10:45:16.818"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Level 2}</var>
<arg>${Level 3 I}</arg>
<arg>${Level 3 II}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:16.818" level="INFO">@{Level 2} = [ [33, 34] | ['bla', 'bla'] ]</msg>
<status status="PASS" starttime="20220120 10:45:16.818" endtime="20220120 10:45:16.819"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Rectangle List}</var>
<arg>${100}</arg>
<arg>${200}</arg>
<arg>${300}</arg>
<arg>${400}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:16.820" level="INFO">@{Rectangle List} = [ 100 | 200 | 300 | 400 ]</msg>
<status status="PASS" starttime="20220120 10:45:16.819" endtime="20220120 10:45:16.820"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${46464664}</arg>
<arg>${TRUE}</arg>
<arg>${4.4}</arg>
<arg>12:00:00</arg>
<arg>${Rectangle List}</arg>
<arg>${Level 2}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:16.821" level="INFO">@{expected} = [ 46464664 | True | 4.4 | 12:00:00 | [100, 200, 300, 400] | [[33, 34], ['bla', 'bla']] ]</msg>
<status status="PASS" starttime="20220120 10:45:16.820" endtime="20220120 10:45:16.821"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:16.822" level="INFO">List length is 6 and it contains following items:
0: 46464664
1: True
2: 4.4
3: 12:00:00
4: [100, 200, 300, 400]
5: [[33, 34], ['bla', 'bla']]</msg>
<status status="PASS" starttime="20220120 10:45:16.822" endtime="20220120 10:45:16.822"/>
</kw>
<kw name="Legacy Lists.return Nested List Special" library="EggplantLibrary">
<var>${l}</var>
<msg timestamp="20220120 10:45:16.822" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnNestedListSpecial",'</msg>
<msg timestamp="20220120 10:45:17.025" level="INFO">Execution duration: 0.185000061989</msg>
<msg timestamp="20220120 10:45:17.025" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:17.026" level="INFO" html="true">20.01.22, 09:45:16	START		Running LegacyLists/returnNestedListSpecial.script
20.01.22, 09:45:16	EndTestCase		(Duration:"0.003", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:16 +0000", Successes:"1", TestCase:"LegacyLists/returnNestedListSpecial.script", Warnings:"0")
20.01.22, 09:45:16	SUCCESS		Execution Time 0:00:00 LegacyLists/returnNestedListSpecial.script
</msg>
<msg timestamp="20220120 10:45:17.026" level="INFO">Return value: [46464664,"True",4.4,"12:00:00",[100,200,300,400],[[33,34],["bla","bla"]]]</msg>
<msg timestamp="20220120 10:45:17.026" level="INFO">${l} = [46464664, True, 4.4, '12:00:00', [100, 200, 300, 400], [[33, 34], ['bla', 'bla']]]</msg>
<status status="PASS" starttime="20220120 10:45:16.822" endtime="20220120 10:45:17.026"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:17.026" endtime="20220120 10:45:17.027"/>
</kw>
<status status="PASS" starttime="20220120 10:45:16.816" endtime="20220120 10:45:17.027"/>
</test>
<test id="s1-s1-s9-s1-t13" name="Nested List With Empty Values">
<kw name="Create List" library="BuiltIn">
<var>@{Level 2}</var>
<arg>one</arg>
<arg>two</arg>
<arg>${EMPTY}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:17.030" level="INFO">@{Level 2} = [ one | two |  ]</msg>
<status status="PASS" starttime="20220120 10:45:17.029" endtime="20220120 10:45:17.030"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>one</arg>
<arg>${Level 2}</arg>
<arg>${EMPTY}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:17.031" level="INFO">@{expected} = [ one | ['one', 'two', ''] |  ]</msg>
<status status="PASS" starttime="20220120 10:45:17.030" endtime="20220120 10:45:17.031"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:17.031" level="INFO">List length is 3 and it contains following items:
0: one
1: ['one', 'two', '']
2: </msg>
<status status="PASS" starttime="20220120 10:45:17.031" endtime="20220120 10:45:17.031"/>
</kw>
<kw name="Legacy Lists.return Nested List With Empty Values" library="EggplantLibrary">
<var>@{l}</var>
<msg timestamp="20220120 10:45:17.032" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnNestedListWithEmptyValues",'</msg>
<msg timestamp="20220120 10:45:17.209" level="INFO">Execution duration: 0.152999997139</msg>
<msg timestamp="20220120 10:45:17.209" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:17.209" level="INFO" html="true">20.01.22, 09:45:17	START		Running LegacyLists/returnNestedListWithEmptyValues.script
20.01.22, 09:45:17	EndTestCase		(Duration:"0.002", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:17 +0000", Successes:"1", TestCase:"LegacyLists/returnNestedListWithEmptyValues.script", Warnings:"0")
20.01.22, 09:45:17	SUCCESS		Execution Time 0:00:00 LegacyLists/returnNestedListWithEmptyValues.script
</msg>
<msg timestamp="20220120 10:45:17.210" level="INFO">Return value: ["one",["one","two",""],""]</msg>
<msg timestamp="20220120 10:45:17.210" level="INFO">@{l} = [ one | ['one', 'two', ''] |  ]</msg>
<status status="PASS" starttime="20220120 10:45:17.031" endtime="20220120 10:45:17.210"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:17.210" endtime="20220120 10:45:17.211"/>
</kw>
<status status="PASS" starttime="20220120 10:45:17.028" endtime="20220120 10:45:17.211"/>
</test>
<test id="s1-s1-s9-s1-t14" name="Nested List With Empty Value At Start (Level 3)">
<kw name="Create List" library="BuiltIn">
<var>@{Simple list}</var>
<arg>alpha</arg>
<arg>beta</arg>
<arg>gamma</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:17.213" level="INFO">@{Simple list} = [ alpha | beta | gamma ]</msg>
<status status="PASS" starttime="20220120 10:45:17.213" endtime="20220120 10:45:17.213"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Level 3}</var>
<arg>${EMPTY}</arg>
<arg>one</arg>
<arg>two</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:17.215" level="INFO">@{Level 3} = [  | one | two ]</msg>
<status status="PASS" starttime="20220120 10:45:17.214" endtime="20220120 10:45:17.215"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Level 2}</var>
<arg>${Simple list}</arg>
<arg>${Simple list}</arg>
<arg>${Level 3}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:17.216" level="INFO">@{Level 2} = [ ['alpha', 'beta', 'gamma'] | ['alpha', 'beta', 'gamma'] | ['', 'one', 'two'] ]</msg>
<status status="PASS" starttime="20220120 10:45:17.215" endtime="20220120 10:45:17.216"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${Level 2}</arg>
<arg>${Simple list}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:17.217" level="INFO">@{expected} = [ [['alpha', 'beta', 'gamma'], ['alpha', 'beta', 'gamma'], ['', 'one', 'two']] | ['alpha', 'beta', 'gamma'] ]</msg>
<status status="PASS" starttime="20220120 10:45:17.217" endtime="20220120 10:45:17.217"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:17.218" level="INFO">List length is 2 and it contains following items:
0: [['alpha', 'beta', 'gamma'], ['alpha', 'beta', 'gamma'], ['', 'one', 'two']]
1: ['alpha', 'beta', 'gamma']</msg>
<status status="PASS" starttime="20220120 10:45:17.217" endtime="20220120 10:45:17.218"/>
</kw>
<kw name="Legacy Lists.return Nested List With Empty Value At Start" library="EggplantLibrary">
<var>@{l}</var>
<msg timestamp="20220120 10:45:17.219" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnNestedListWithEmptyValueAtStart",'</msg>
<msg timestamp="20220120 10:45:17.442" level="INFO">Execution duration: 0.200000047684</msg>
<msg timestamp="20220120 10:45:17.442" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:17.442" level="INFO" html="true">20.01.22, 09:45:17	START		Running LegacyLists/returnNestedListWithEmptyValueAtStart.script
20.01.22, 09:45:17	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:17 +0000", Successes:"1", TestCase:"LegacyLists/returnNestedListWithEmptyValueAtStart.script", Warnings:"0")
20.01.22, 09:45:17	SUCCESS		Execution Time 0:00:00 LegacyLists/returnNestedListWithEmptyValueAtStart.script
</msg>
<msg timestamp="20220120 10:45:17.442" level="INFO">Return value: [[["alpha","beta","gamma"],["alpha","beta","gamma"],["","one","two"]],["alpha","beta","gamma"]]</msg>
<msg timestamp="20220120 10:45:17.443" level="INFO">@{l} = [ [['alpha', 'beta', 'gamma'], ['alpha', 'beta', 'gamma'], ['', 'one', 'two']] | ['alpha', 'beta', 'gamma'] ]</msg>
<status status="PASS" starttime="20220120 10:45:17.218" endtime="20220120 10:45:17.443"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:17.443" endtime="20220120 10:45:17.444"/>
</kw>
<status status="PASS" starttime="20220120 10:45:17.212" endtime="20220120 10:45:17.444"/>
</test>
<test id="s1-s1-s9-s1-t15" name="Nested List with a string value with brackets">
<kw name="Create List" library="BuiltIn">
<var>@{Level 3}</var>
<arg>alpha</arg>
<arg>beta</arg>
<arg>gamma</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:17.447" level="INFO">@{Level 3} = [ alpha | beta | gamma ]</msg>
<status status="PASS" starttime="20220120 10:45:17.447" endtime="20220120 10:45:17.447"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Level 2}</var>
<arg>A</arg>
<arg>B</arg>
<arg>${Level 3}</arg>
<arg>${Some string with last bracket}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:17.448" level="INFO">@{Level 2} = [ A | B | ['alpha', 'beta', 'gamma'] | Saarbrücken Hbf - Neubrücke (Nahe) ]</msg>
<status status="PASS" starttime="20220120 10:45:17.447" endtime="20220120 10:45:17.448"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1}</arg>
<arg>${2}</arg>
<arg>${Level 2}</arg>
<arg>${3}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:17.449" level="INFO">@{expected} = [ 1 | 2 | ['A', 'B', ['alpha', 'beta', 'gamma'], 'Saarbrücken Hbf - Neubrücke (Nahe)'] | 3 ]</msg>
<status status="PASS" starttime="20220120 10:45:17.448" endtime="20220120 10:45:17.449"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:17.450" level="INFO">List length is 4 and it contains following items:
0: 1
1: 2
2: ['A', 'B', ['alpha', 'beta', 'gamma'], 'Saarbrücken Hbf - Neubrücke (Nahe)']
3: 3</msg>
<status status="PASS" starttime="20220120 10:45:17.450" endtime="20220120 10:45:17.450"/>
</kw>
<kw name="Legacy Lists.return Nested List With String Inside" library="EggplantLibrary">
<var>${l}</var>
<arg>${Some string with last bracket}</arg>
<msg timestamp="20220120 10:45:17.452" level="INFO">Send command to eggPlant server: 'RunWithNewResults "LegacyLists/returnNestedListWithStringInside", "Saarbrücken Hbf - Neubrücke (Nahe)",'</msg>
<msg timestamp="20220120 10:45:17.673" level="INFO">Execution duration: 0.182000041008</msg>
<msg timestamp="20220120 10:45:17.673" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:17.673" level="INFO" html="true">20.01.22, 09:45:17	START		Running LegacyLists/returnNestedListWithStringInside.script
20.01.22, 09:45:17	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:17 +0000", Successes:"1", TestCase:"LegacyLists/returnNestedListWithStringInside.script", Warnings:"0")
20.01.22, 09:45:17	SUCCESS		Execution Time 0:00:00 LegacyLists/returnNestedListWithStringInside.script
</msg>
<msg timestamp="20220120 10:45:17.673" level="INFO">Return value: [1,2,["A","B",["alpha","beta","gamma"],"Saarbrücken Hbf - Neubrücke (Nahe)"],3]</msg>
<msg timestamp="20220120 10:45:17.673" level="INFO">${l} = [1, 2, ['A', 'B', ['alpha', 'beta', 'gamma'], 'Saarbrücken Hbf - Neubrücke (Nahe)'], 3]</msg>
<status status="PASS" starttime="20220120 10:45:17.451" endtime="20220120 10:45:17.673"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:17.674" endtime="20220120 10:45:17.675"/>
</kw>
<status status="PASS" starttime="20220120 10:45:17.445" endtime="20220120 10:45:17.675"/>
</test>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:45:17.677" endtime="20220120 10:45:17.699"/>
</kw>
<doc>Tests for lists with old legacy formatting (round brackets) - prior to eggPlant 20.1.0.</doc>
<status status="PASS" starttime="20220120 10:45:13.641" endtime="20220120 10:45:17.699"/>
</suite>
<suite id="s1-s1-s9-s2" name="Lists" source="D:\DEV\robotframework-eggplant\tests\tests\Return\Lists.robot">
<kw name="Open Session" library="EggplantLibrary" type="SETUP">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:45:17.773" level="INFO">Send command to eggPlant server: 'if EggplantVersion().eggplant &lt; "21.1.0" then LogWarning !"Incompatible eggplant version detected - [[EggplantVersion().eggplant]]. Min. version required - 21.1.0. See README for more information."'</msg>
<msg timestamp="20220120 10:45:17.818" level="INFO">Execution duration: 0.00100004673</msg>
<msg timestamp="20220120 10:45:17.818" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:17.818" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:17.818" level="INFO">Return value: {'Duration': 0.009000062943, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/LegacyLists/returnNestedListWithStringInside/20220120_094517.535/LogFile.txt', 'ReturnValue': '[1,2,["A","B",["alpha","beta","gamma"],"Saarbrücken Hbf - Neubrücke (Nahe)"],3]', 'RunDate': &lt;DateTime '20220120T09:45:17' at 0x2cea9bd9550&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<status status="PASS" starttime="20220120 10:45:17.710" endtime="20220120 10:45:17.818"/>
</kw>
<test id="s1-s1-s9-s2-t1" name="Simple List Return">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1}</arg>
<arg>${2}</arg>
<arg>${3}</arg>
<arg>${4}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:17.820" level="INFO">@{expected} = [ 1 | 2 | 3 | 4 ]</msg>
<status status="PASS" starttime="20220120 10:45:17.820" endtime="20220120 10:45:17.820"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:17.821" level="INFO">List length is 4 and it contains following items:
0: 1
1: 2
2: 3
3: 4</msg>
<status status="PASS" starttime="20220120 10:45:17.821" endtime="20220120 10:45:17.821"/>
</kw>
<kw name="Lists.return List" library="EggplantLibrary">
<var>${l}</var>
<msg timestamp="20220120 10:45:17.822" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnList",'</msg>
<msg timestamp="20220120 10:45:17.988" level="INFO">Execution duration: 0.141000032425</msg>
<msg timestamp="20220120 10:45:17.988" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:17.989" level="INFO" html="true">20.01.22, 09:45:17	START		Running Lists/returnList.script
20.01.22, 09:45:17	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:17 +0000", Successes:"1", TestCase:"Lists/returnList.script", Warnings:"0")
20.01.22, 09:45:17	SUCCESS		Execution Time 0:00:00 Lists/returnList.script
</msg>
<msg timestamp="20220120 10:45:17.989" level="INFO">Return value: [1,2,3,4]</msg>
<msg timestamp="20220120 10:45:17.989" level="INFO">${l} = [1, 2, 3, 4]</msg>
<status status="PASS" starttime="20220120 10:45:17.822" endtime="20220120 10:45:17.989"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:17.989" endtime="20220120 10:45:17.990"/>
</kw>
<status status="PASS" starttime="20220120 10:45:17.818" endtime="20220120 10:45:17.990"/>
</test>
<test id="s1-s1-s9-s2-t2" name="List with new line in the value">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>Value 1</arg>
<arg>Value\n2</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:17.992" level="INFO">@{expected} = [ Value 1 | Value
2 ]</msg>
<status status="PASS" starttime="20220120 10:45:17.992" endtime="20220120 10:45:17.992"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:17.993" level="INFO">List length is 2 and it contains following items:
0: Value 1
1: Value
2</msg>
<status status="PASS" starttime="20220120 10:45:17.992" endtime="20220120 10:45:17.993"/>
</kw>
<kw name="Lists.return List With New Line In The Value" library="EggplantLibrary">
<var>@{l}</var>
<msg timestamp="20220120 10:45:17.993" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnListWithNewLineInTheValue",'</msg>
<msg timestamp="20220120 10:45:18.193" level="INFO">Execution duration: 0.174999952316</msg>
<msg timestamp="20220120 10:45:18.193" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:18.193" level="INFO" html="true">20.01.22, 09:45:18	START		Running Lists/returnListWithNewLineInTheValue.script
20.01.22, 09:45:18	EndTestCase		(Duration:"0.002", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:18 +0000", Successes:"1", TestCase:"Lists/returnListWithNewLineInTheValue.script", Warnings:"0")
20.01.22, 09:45:18	SUCCESS		Execution Time 0:00:00 Lists/returnListWithNewLineInTheValue.script
</msg>
<msg timestamp="20220120 10:45:18.193" level="INFO">Return value: ["Value 1",@"Value\n2"]</msg>
<msg timestamp="20220120 10:45:18.193" level="INFO">@{l} = [ Value 1 | Value
2 ]</msg>
<status status="PASS" starttime="20220120 10:45:17.993" endtime="20220120 10:45:18.193"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:18.194" endtime="20220120 10:45:18.194"/>
</kw>
<status status="PASS" starttime="20220120 10:45:17.991" endtime="20220120 10:45:18.195"/>
</test>
<test id="s1-s1-s9-s2-t3" name="List with single value">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>single_value</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:18.198" level="INFO">@{expected} = [ single_value ]</msg>
<status status="PASS" starttime="20220120 10:45:18.197" endtime="20220120 10:45:18.198"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:18.198" level="INFO">List has one item:
single_value</msg>
<status status="PASS" starttime="20220120 10:45:18.198" endtime="20220120 10:45:18.198"/>
</kw>
<kw name="Lists.return List Single Value" library="EggplantLibrary">
<var>@{l}</var>
<msg timestamp="20220120 10:45:18.199" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnListSingleValue",'</msg>
<msg timestamp="20220120 10:45:18.402" level="INFO">Execution duration: 0.184000015259</msg>
<msg timestamp="20220120 10:45:18.402" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:18.402" level="INFO" html="true">20.01.22, 09:45:18	START		Running Lists/returnListSingleValue.script
20.01.22, 09:45:18	EndTestCase		(Duration:"0.003", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:18 +0000", Successes:"1", TestCase:"Lists/returnListSingleValue.script", Warnings:"0")
20.01.22, 09:45:18	SUCCESS		Execution Time 0:00:00 Lists/returnListSingleValue.script
</msg>
<msg timestamp="20220120 10:45:18.402" level="INFO">Return value: ["single_value"]</msg>
<msg timestamp="20220120 10:45:18.403" level="INFO">@{l} = [ single_value ]</msg>
<status status="PASS" starttime="20220120 10:45:18.199" endtime="20220120 10:45:18.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:18.403" endtime="20220120 10:45:18.404"/>
</kw>
<status status="PASS" starttime="20220120 10:45:18.196" endtime="20220120 10:45:18.404"/>
</test>
<test id="s1-s1-s9-s2-t4" name="List with bools">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${False}</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:18.407" level="INFO">@{expected} = [ False | True | False ]</msg>
<status status="PASS" starttime="20220120 10:45:18.407" endtime="20220120 10:45:18.407"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:18.408" level="INFO">List length is 3 and it contains following items:
0: False
1: True
2: False</msg>
<status status="PASS" starttime="20220120 10:45:18.407" endtime="20220120 10:45:18.408"/>
</kw>
<kw name="Lists.return List With Bools" library="EggplantLibrary">
<var>${l}</var>
<msg timestamp="20220120 10:45:18.408" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnListWithBools",'</msg>
<msg timestamp="20220120 10:45:18.614" level="INFO">Execution duration: 0.15700006485</msg>
<msg timestamp="20220120 10:45:18.614" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:18.614" level="INFO" html="true">20.01.22, 09:45:18	START		Running Lists/returnListWithBools.script
20.01.22, 09:45:18	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:18 +0000", Successes:"1", TestCase:"Lists/returnListWithBools.script", Warnings:"0")
20.01.22, 09:45:18	SUCCESS		Execution Time 0:00:00 Lists/returnListWithBools.script
</msg>
<msg timestamp="20220120 10:45:18.615" level="INFO">Return value: ["False","True","False"]</msg>
<msg timestamp="20220120 10:45:18.615" level="INFO">${l} = [False, True, False]</msg>
<status status="PASS" starttime="20220120 10:45:18.408" endtime="20220120 10:45:18.615"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:18.616" endtime="20220120 10:45:18.618"/>
</kw>
<doc>Change in eggPlant 21.2.0 - bool values inside a list get quoted
[false, true] --&gt; ["False", "True"]</doc>
<status status="PASS" starttime="20220120 10:45:18.406" endtime="20220120 10:45:18.618"/>
</test>
<test id="s1-s1-s9-s2-t5" name="List with a float value">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1}</arg>
<arg>${2}</arg>
<arg>${3.14}</arg>
<arg>${4}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:18.622" level="INFO">@{expected} = [ 1 | 2 | 3.14 | 4 ]</msg>
<status status="PASS" starttime="20220120 10:45:18.621" endtime="20220120 10:45:18.622"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:18.623" level="INFO">List length is 4 and it contains following items:
0: 1
1: 2
2: 3.14
3: 4</msg>
<status status="PASS" starttime="20220120 10:45:18.622" endtime="20220120 10:45:18.623"/>
</kw>
<kw name="Lists.return List With Argument" library="EggplantLibrary">
<var>${l}</var>
<arg>${3.14}</arg>
<doc> Returns a simple list with the argument inside - as a third value
 Return [1,2,my_value,4]</doc>
<msg timestamp="20220120 10:45:18.624" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnListWithArgument", 3.14,'</msg>
<msg timestamp="20220120 10:45:18.837" level="INFO">Execution duration: 0.202000021935</msg>
<msg timestamp="20220120 10:45:18.837" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:18.837" level="INFO" html="true">20.01.22, 09:45:18	START		Running Lists/returnListWithArgument.script
20.01.22, 09:45:18	EndTestCase		(Duration:"0.002", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:18 +0000", Successes:"1", TestCase:"Lists/returnListWithArgument.script", Warnings:"0")
20.01.22, 09:45:18	SUCCESS		Execution Time 0:00:00 Lists/returnListWithArgument.script
</msg>
<msg timestamp="20220120 10:45:18.837" level="INFO">Return value: [1,2,3.14,4]</msg>
<msg timestamp="20220120 10:45:18.837" level="INFO">${l} = [1, 2, 3.14, 4]</msg>
<status status="PASS" starttime="20220120 10:45:18.623" endtime="20220120 10:45:18.837"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:18.838" endtime="20220120 10:45:18.839"/>
</kw>
<status status="PASS" starttime="20220120 10:45:18.620" endtime="20220120 10:45:18.839"/>
</test>
<test id="s1-s1-s9-s2-t6" name="List With Brackets In String Middle">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1234}</arg>
<arg>${Some string with brackets}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:18.842" level="INFO">@{expected} = [ 1234 | Au [Sieg] - Düren Pbf ]</msg>
<status status="PASS" starttime="20220120 10:45:18.841" endtime="20220120 10:45:18.842"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:18.842" level="INFO">List length is 2 and it contains following items:
0: 1234
1: Au [Sieg] - Düren Pbf</msg>
<status status="PASS" starttime="20220120 10:45:18.842" endtime="20220120 10:45:18.842"/>
</kw>
<kw name="Lists.return List With Brackets In String" library="EggplantLibrary">
<var>@{l}</var>
<arg>${Some string with brackets}</arg>
<msg timestamp="20220120 10:45:18.843" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnListWithBracketsInString", "Au [Sieg] - Düren Pbf",'</msg>
<msg timestamp="20220120 10:45:19.248" level="INFO">Execution duration: 0.388000011444</msg>
<msg timestamp="20220120 10:45:19.248" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:19.248" level="INFO" html="true">20.01.22, 09:45:18	START		Running Lists/returnListWithBracketsInString.script
20.01.22, 09:45:18	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:18 +0000", Successes:"1", TestCase:"Lists/returnListWithBracketsInString.script", Warnings:"0")
20.01.22, 09:45:19	SUCCESS		Execution Time 0:00:00 Lists/returnListWithBracketsInString.script
</msg>
<msg timestamp="20220120 10:45:19.248" level="INFO">Return value: [1234,"Au [Sieg] - Düren Pbf"]</msg>
<msg timestamp="20220120 10:45:19.248" level="INFO">@{l} = [ 1234 | Au [Sieg] - Düren Pbf ]</msg>
<status status="PASS" starttime="20220120 10:45:18.843" endtime="20220120 10:45:19.248"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:19.249" endtime="20220120 10:45:19.249"/>
</kw>
<status status="PASS" starttime="20220120 10:45:18.840" endtime="20220120 10:45:19.249"/>
</test>
<test id="s1-s1-s9-s2-t7" name="List With Brackets In String End (List Middle)">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1234}</arg>
<arg>${Some string with last bracket}</arg>
<arg>ABC</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:19.252" level="INFO">@{expected} = [ 1234 | Saarbrücken Hbf - Neubrücke [Nahe] | ABC ]</msg>
<status status="PASS" starttime="20220120 10:45:19.251" endtime="20220120 10:45:19.252"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:19.252" level="INFO">List length is 3 and it contains following items:
0: 1234
1: Saarbrücken Hbf - Neubrücke [Nahe]
2: ABC</msg>
<status status="PASS" starttime="20220120 10:45:19.252" endtime="20220120 10:45:19.252"/>
</kw>
<kw name="Lists.return List With Brackets In String In Middle" library="EggplantLibrary">
<var>@{l}</var>
<arg>${Some string with last bracket}</arg>
<msg timestamp="20220120 10:45:19.253" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnListWithBracketsInStringInMiddle", "Saarbrücken Hbf - Neubrücke [Nahe]",'</msg>
<msg timestamp="20220120 10:45:19.497" level="INFO">Execution duration: 0.226999998093</msg>
<msg timestamp="20220120 10:45:19.497" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:19.497" level="INFO" html="true">20.01.22, 09:45:19	START		Running Lists/returnListWithBracketsInStringInMiddle.script
20.01.22, 09:45:19	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:19 +0000", Successes:"1", TestCase:"Lists/returnListWithBracketsInStringInMiddle.script", Warnings:"0")
20.01.22, 09:45:19	SUCCESS		Execution Time 0:00:00 Lists/returnListWithBracketsInStringInMiddle.script
</msg>
<msg timestamp="20220120 10:45:19.497" level="INFO">Return value: [1234,"Saarbrücken Hbf - Neubrücke [Nahe]","ABC"]</msg>
<msg timestamp="20220120 10:45:19.498" level="INFO">@{l} = [ 1234 | Saarbrücken Hbf - Neubrücke [Nahe] | ABC ]</msg>
<status status="PASS" starttime="20220120 10:45:19.252" endtime="20220120 10:45:19.498"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:19.499" endtime="20220120 10:45:19.500"/>
</kw>
<status status="PASS" starttime="20220120 10:45:19.250" endtime="20220120 10:45:19.500"/>
</test>
<test id="s1-s1-s9-s2-t8" name="List With Brackets In String End (List End)">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1234}</arg>
<arg>${Some string with last bracket}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:19.505" level="INFO">@{expected} = [ 1234 | Saarbrücken Hbf - Neubrücke [Nahe] ]</msg>
<status status="PASS" starttime="20220120 10:45:19.504" endtime="20220120 10:45:19.505"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:19.506" level="INFO">List length is 2 and it contains following items:
0: 1234
1: Saarbrücken Hbf - Neubrücke [Nahe]</msg>
<status status="PASS" starttime="20220120 10:45:19.506" endtime="20220120 10:45:19.507"/>
</kw>
<kw name="Lists.return List With Brackets In String" library="EggplantLibrary">
<var>@{l}</var>
<arg>${Some string with last bracket}</arg>
<msg timestamp="20220120 10:45:19.509" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnListWithBracketsInString", "Saarbrücken Hbf - Neubrücke [Nahe]",'</msg>
<msg timestamp="20220120 10:45:20.644" level="INFO">Execution duration: 1.037999987602</msg>
<msg timestamp="20220120 10:45:20.644" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:20.644" level="INFO" html="true">20.01.22, 09:45:20	START		Running Lists/returnListWithBracketsInString.script
20.01.22, 09:45:20	EndTestCase		(Duration:"0.013", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:20 +0000", Successes:"1", TestCase:"Lists/returnListWithBracketsInString.script", Warnings:"0")
20.01.22, 09:45:20	SUCCESS		Execution Time 0:00:00 Lists/returnListWithBracketsInString.script
</msg>
<msg timestamp="20220120 10:45:20.644" level="INFO">Return value: [1234,"Saarbrücken Hbf - Neubrücke [Nahe]"]</msg>
<msg timestamp="20220120 10:45:20.645" level="INFO">@{l} = [ 1234 | Saarbrücken Hbf - Neubrücke [Nahe] ]</msg>
<status status="PASS" starttime="20220120 10:45:19.508" endtime="20220120 10:45:20.645"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:20.646" endtime="20220120 10:45:20.646"/>
</kw>
<status status="PASS" starttime="20220120 10:45:19.502" endtime="20220120 10:45:20.647"/>
</test>
<test id="s1-s1-s9-s2-t9" name="List With Closing Bracket ONLY In String End (List End)">
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1234}</arg>
<arg>${Some string with closing bracket ONLY}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:20.650" level="INFO">@{expected} = [ 1234 | Saarbrücken Hbf - Neubrücke Nahe] ]</msg>
<status status="PASS" starttime="20220120 10:45:20.649" endtime="20220120 10:45:20.650"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:20.650" level="INFO">List length is 2 and it contains following items:
0: 1234
1: Saarbrücken Hbf - Neubrücke Nahe]</msg>
<status status="PASS" starttime="20220120 10:45:20.650" endtime="20220120 10:45:20.650"/>
</kw>
<kw name="Lists.return List With Brackets In String" library="EggplantLibrary">
<var>@{l}</var>
<arg>${Some string with closing bracket ONLY}</arg>
<msg timestamp="20220120 10:45:20.651" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnListWithBracketsInString", "Saarbrücken Hbf - Neubrücke Nahe]",'</msg>
<msg timestamp="20220120 10:45:20.861" level="INFO">Execution duration: 0.183999896049</msg>
<msg timestamp="20220120 10:45:20.861" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:20.862" level="INFO" html="true">20.01.22, 09:45:20	START		Running Lists/returnListWithBracketsInString.script
20.01.22, 09:45:20	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:20 +0000", Successes:"1", TestCase:"Lists/returnListWithBracketsInString.script", Warnings:"0")
20.01.22, 09:45:20	SUCCESS		Execution Time 0:00:00 Lists/returnListWithBracketsInString.script
</msg>
<msg timestamp="20220120 10:45:20.862" level="INFO">Return value: [1234,"Saarbrücken Hbf - Neubrücke Nahe]"]</msg>
<msg timestamp="20220120 10:45:20.862" level="INFO">@{l} = [ 1234 | Saarbrücken Hbf - Neubrücke Nahe] ]</msg>
<status status="PASS" starttime="20220120 10:45:20.651" endtime="20220120 10:45:20.862"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:20.862" endtime="20220120 10:45:20.863"/>
</kw>
<status status="PASS" starttime="20220120 10:45:20.648" endtime="20220120 10:45:20.863"/>
</test>
<test id="s1-s1-s9-s2-t10" name="List With Unpaired Closure Bracket And Open Brackets In String Middle">
<kw name="Create List" library="BuiltIn">
<var>@{Level 2}</var>
<arg>${1234}</arg>
<arg>he[llo]</arg>
<arg>abc]</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:20.866" level="INFO">@{Level 2} = [ 1234 | he[llo] | abc] ]</msg>
<status status="PASS" starttime="20220120 10:45:20.865" endtime="20220120 10:45:20.866"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>xyz</arg>
<arg>${Level 2}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:20.866" level="INFO">@{expected} = [ xyz | [1234, 'he[llo]', 'abc]'] ]</msg>
<status status="PASS" starttime="20220120 10:45:20.866" endtime="20220120 10:45:20.867"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:20.867" level="INFO">List length is 2 and it contains following items:
0: xyz
1: [1234, 'he[llo]', 'abc]']</msg>
<status status="PASS" starttime="20220120 10:45:20.867" endtime="20220120 10:45:20.867"/>
</kw>
<kw name="Lists.return List With Unpaired Closure Bracket And Open Brackets In String Middle" library="EggplantLibrary">
<var>@{l}</var>
<msg timestamp="20220120 10:45:20.868" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnListWithUnpairedClosureBracketAndOpenBracketsInStringMiddle",'</msg>
<msg timestamp="20220120 10:45:21.060" level="INFO">Execution duration: 0.171000003815</msg>
<msg timestamp="20220120 10:45:21.060" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:21.060" level="INFO" html="true">20.01.22, 09:45:20	START		Running Lists/returnListWithUnpairedClosureBracketAndOpenBracketsInStringMiddle.script
20.01.22, 09:45:20	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:20 +0000", Successes:"1", TestCase:"Lists/returnListWithUnpairedClosureBracketAndOpenBracketsInStringMiddle.script", Warnings:"0")
20.01.22, 09:45:20	SUCCESS		Execution Time 0:00:00 Lists/returnListWithUnpairedClosureBracketAndOpenBracketsInStringMiddle.script
</msg>
<msg timestamp="20220120 10:45:21.060" level="INFO">Return value: ["xyz",[1234,"he[llo]","abc]"]]</msg>
<msg timestamp="20220120 10:45:21.060" level="INFO">@{l} = [ xyz | [1234, 'he[llo]', 'abc]'] ]</msg>
<status status="PASS" starttime="20220120 10:45:20.868" endtime="20220120 10:45:21.060"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:21.061" endtime="20220120 10:45:21.062"/>
</kw>
<status status="PASS" starttime="20220120 10:45:20.864" endtime="20220120 10:45:21.063"/>
</test>
<test id="s1-s1-s9-s2-t11" name="Nested List">
<kw name="Create List" library="BuiltIn">
<var>@{Level 3}</var>
<arg>alpha</arg>
<arg>beta</arg>
<arg>gamma</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.065" level="INFO">@{Level 3} = [ alpha | beta | gamma ]</msg>
<status status="PASS" starttime="20220120 10:45:21.065" endtime="20220120 10:45:21.065"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Level 2}</var>
<arg>A</arg>
<arg>B</arg>
<arg>${Level 3}</arg>
<arg>C</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.066" level="INFO">@{Level 2} = [ A | B | ['alpha', 'beta', 'gamma'] | C ]</msg>
<status status="PASS" starttime="20220120 10:45:21.066" endtime="20220120 10:45:21.066"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1}</arg>
<arg>${2}</arg>
<arg>${Level 2}</arg>
<arg>${3}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.069" level="INFO">@{expected} = [ 1 | 2 | ['A', 'B', ['alpha', 'beta', 'gamma'], 'C'] | 3 ]</msg>
<status status="PASS" starttime="20220120 10:45:21.067" endtime="20220120 10:45:21.069"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:21.070" level="INFO">List length is 4 and it contains following items:
0: 1
1: 2
2: ['A', 'B', ['alpha', 'beta', 'gamma'], 'C']
3: 3</msg>
<status status="PASS" starttime="20220120 10:45:21.070" endtime="20220120 10:45:21.070"/>
</kw>
<kw name="Lists.return Nested List" library="EggplantLibrary">
<var>${l}</var>
<msg timestamp="20220120 10:45:21.071" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnNestedList",'</msg>
<msg timestamp="20220120 10:45:21.255" level="INFO">Execution duration: 0.163999915123</msg>
<msg timestamp="20220120 10:45:21.255" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:21.255" level="INFO" html="true">20.01.22, 09:45:21	START		Running Lists/returnNestedList.script
20.01.22, 09:45:21	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:21 +0000", Successes:"1", TestCase:"Lists/returnNestedList.script", Warnings:"0")
20.01.22, 09:45:21	SUCCESS		Execution Time 0:00:00 Lists/returnNestedList.script
</msg>
<msg timestamp="20220120 10:45:21.255" level="INFO">Return value: [1,2,["A","B",["alpha","beta","gamma"],"C"],3]</msg>
<msg timestamp="20220120 10:45:21.256" level="INFO">${l} = [1, 2, ['A', 'B', ['alpha', 'beta', 'gamma'], 'C'], 3]</msg>
<status status="PASS" starttime="20220120 10:45:21.070" endtime="20220120 10:45:21.256"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:21.256" endtime="20220120 10:45:21.257"/>
</kw>
<status status="PASS" starttime="20220120 10:45:21.064" endtime="20220120 10:45:21.257"/>
</test>
<test id="s1-s1-s9-s2-t12" name="Special Nested List">
<kw name="Create List" library="BuiltIn">
<var>@{Level 3 I}</var>
<arg>${33}</arg>
<arg>${34}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.260" level="INFO">@{Level 3 I} = [ 33 | 34 ]</msg>
<status status="PASS" starttime="20220120 10:45:21.258" endtime="20220120 10:45:21.260"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Level 3 II}</var>
<arg>bla</arg>
<arg>bla</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.261" level="INFO">@{Level 3 II} = [ bla | bla ]</msg>
<status status="PASS" starttime="20220120 10:45:21.260" endtime="20220120 10:45:21.261"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Level 2}</var>
<arg>${Level 3 I}</arg>
<arg>${Level 3 II}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.261" level="INFO">@{Level 2} = [ [33, 34] | ['bla', 'bla'] ]</msg>
<status status="PASS" starttime="20220120 10:45:21.261" endtime="20220120 10:45:21.261"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Rectangle List}</var>
<arg>${100}</arg>
<arg>${200}</arg>
<arg>${300}</arg>
<arg>${400}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.263" level="INFO">@{Rectangle List} = [ 100 | 200 | 300 | 400 ]</msg>
<status status="PASS" starttime="20220120 10:45:21.261" endtime="20220120 10:45:21.263"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${46464664}</arg>
<arg>${TRUE}</arg>
<arg>${4.4}</arg>
<arg>12:00:00</arg>
<arg>${Rectangle List}</arg>
<arg>${Level 2}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.264" level="INFO">@{expected} = [ 46464664 | True | 4.4 | 12:00:00 | [100, 200, 300, 400] | [[33, 34], ['bla', 'bla']] ]</msg>
<status status="PASS" starttime="20220120 10:45:21.263" endtime="20220120 10:45:21.264"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:21.265" level="INFO">List length is 6 and it contains following items:
0: 46464664
1: True
2: 4.4
3: 12:00:00
4: [100, 200, 300, 400]
5: [[33, 34], ['bla', 'bla']]</msg>
<status status="PASS" starttime="20220120 10:45:21.265" endtime="20220120 10:45:21.265"/>
</kw>
<kw name="Lists.return Nested List Special" library="EggplantLibrary">
<var>${l}</var>
<msg timestamp="20220120 10:45:21.266" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnNestedListSpecial",'</msg>
<msg timestamp="20220120 10:45:21.509" level="INFO">Execution duration: 0.235999941826</msg>
<msg timestamp="20220120 10:45:21.509" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:21.509" level="INFO" html="true">20.01.22, 09:45:21	START		Running Lists/returnNestedListSpecial.script
20.01.22, 09:45:21	EndTestCase		(Duration:"0.003", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:21 +0000", Successes:"1", TestCase:"Lists/returnNestedListSpecial.script", Warnings:"0")
20.01.22, 09:45:21	SUCCESS		Execution Time 0:00:00 Lists/returnNestedListSpecial.script
</msg>
<msg timestamp="20220120 10:45:21.509" level="INFO">Return value: [46464664,"True",4.4,"12:00:00",[100,200,300,400],[[33,34],["bla","bla"]]]</msg>
<msg timestamp="20220120 10:45:21.509" level="INFO">${l} = [46464664, True, 4.4, '12:00:00', [100, 200, 300, 400], [[33, 34], ['bla', 'bla']]]</msg>
<status status="PASS" starttime="20220120 10:45:21.266" endtime="20220120 10:45:21.509"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:21.509" endtime="20220120 10:45:21.510"/>
</kw>
<status status="PASS" starttime="20220120 10:45:21.258" endtime="20220120 10:45:21.510"/>
</test>
<test id="s1-s1-s9-s2-t13" name="Nested List With Empty Values">
<kw name="Create List" library="BuiltIn">
<var>@{Level 2}</var>
<arg>one</arg>
<arg>two</arg>
<arg>${EMPTY}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.512" level="INFO">@{Level 2} = [ one | two |  ]</msg>
<status status="PASS" starttime="20220120 10:45:21.512" endtime="20220120 10:45:21.512"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>one</arg>
<arg>${Level 2}</arg>
<arg>${EMPTY}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.513" level="INFO">@{expected} = [ one | ['one', 'two', ''] |  ]</msg>
<status status="PASS" starttime="20220120 10:45:21.513" endtime="20220120 10:45:21.513"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:21.514" level="INFO">List length is 3 and it contains following items:
0: one
1: ['one', 'two', '']
2: </msg>
<status status="PASS" starttime="20220120 10:45:21.514" endtime="20220120 10:45:21.514"/>
</kw>
<kw name="Lists.return Nested List With Empty Values" library="EggplantLibrary">
<var>@{l}</var>
<msg timestamp="20220120 10:45:21.514" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnNestedListWithEmptyValues",'</msg>
<msg timestamp="20220120 10:45:21.705" level="INFO">Execution duration: 0.151999950409</msg>
<msg timestamp="20220120 10:45:21.705" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:21.705" level="INFO" html="true">20.01.22, 09:45:21	START		Running Lists/returnNestedListWithEmptyValues.script
20.01.22, 09:45:21	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:21 +0000", Successes:"1", TestCase:"Lists/returnNestedListWithEmptyValues.script", Warnings:"0")
20.01.22, 09:45:21	SUCCESS		Execution Time 0:00:00 Lists/returnNestedListWithEmptyValues.script
</msg>
<msg timestamp="20220120 10:45:21.705" level="INFO">Return value: ["one",["one","two",""],""]</msg>
<msg timestamp="20220120 10:45:21.705" level="INFO">@{l} = [ one | ['one', 'two', ''] |  ]</msg>
<status status="PASS" starttime="20220120 10:45:21.514" endtime="20220120 10:45:21.705"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:21.706" endtime="20220120 10:45:21.706"/>
</kw>
<status status="PASS" starttime="20220120 10:45:21.511" endtime="20220120 10:45:21.706"/>
</test>
<test id="s1-s1-s9-s2-t14" name="Nested List With Empty Value At Start (Level 3)">
<kw name="Create List" library="BuiltIn">
<var>@{Simple list}</var>
<arg>alpha</arg>
<arg>beta</arg>
<arg>gamma</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.708" level="INFO">@{Simple list} = [ alpha | beta | gamma ]</msg>
<status status="PASS" starttime="20220120 10:45:21.708" endtime="20220120 10:45:21.708"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Level 3}</var>
<arg>${EMPTY}</arg>
<arg>one</arg>
<arg>two</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.709" level="INFO">@{Level 3} = [  | one | two ]</msg>
<status status="PASS" starttime="20220120 10:45:21.708" endtime="20220120 10:45:21.709"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Level 2}</var>
<arg>${Simple list}</arg>
<arg>${Simple list}</arg>
<arg>${Level 3}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.710" level="INFO">@{Level 2} = [ ['alpha', 'beta', 'gamma'] | ['alpha', 'beta', 'gamma'] | ['', 'one', 'two'] ]</msg>
<status status="PASS" starttime="20220120 10:45:21.710" endtime="20220120 10:45:21.710"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${Level 2}</arg>
<arg>${Simple list}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.711" level="INFO">@{expected} = [ [['alpha', 'beta', 'gamma'], ['alpha', 'beta', 'gamma'], ['', 'one', 'two']] | ['alpha', 'beta', 'gamma'] ]</msg>
<status status="PASS" starttime="20220120 10:45:21.711" endtime="20220120 10:45:21.711"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:21.712" level="INFO">List length is 2 and it contains following items:
0: [['alpha', 'beta', 'gamma'], ['alpha', 'beta', 'gamma'], ['', 'one', 'two']]
1: ['alpha', 'beta', 'gamma']</msg>
<status status="PASS" starttime="20220120 10:45:21.712" endtime="20220120 10:45:21.712"/>
</kw>
<kw name="Lists.return Nested List With Empty Value At Start" library="EggplantLibrary">
<var>@{l}</var>
<msg timestamp="20220120 10:45:21.713" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnNestedListWithEmptyValueAtStart",'</msg>
<msg timestamp="20220120 10:45:21.876" level="INFO">Execution duration: 0.140000104904</msg>
<msg timestamp="20220120 10:45:21.876" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:21.876" level="INFO" html="true">20.01.22, 09:45:21	START		Running Lists/returnNestedListWithEmptyValueAtStart.script
20.01.22, 09:45:21	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:21 +0000", Successes:"1", TestCase:"Lists/returnNestedListWithEmptyValueAtStart.script", Warnings:"0")
20.01.22, 09:45:21	SUCCESS		Execution Time 0:00:00 Lists/returnNestedListWithEmptyValueAtStart.script
</msg>
<msg timestamp="20220120 10:45:21.876" level="INFO">Return value: [[["alpha","beta","gamma"],["alpha","beta","gamma"],["","one","two"]],["alpha","beta","gamma"]]</msg>
<msg timestamp="20220120 10:45:21.876" level="INFO">@{l} = [ [['alpha', 'beta', 'gamma'], ['alpha', 'beta', 'gamma'], ['', 'one', 'two']] | ['alpha', 'beta', 'gamma'] ]</msg>
<status status="PASS" starttime="20220120 10:45:21.712" endtime="20220120 10:45:21.876"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:21.877" endtime="20220120 10:45:21.877"/>
</kw>
<status status="PASS" starttime="20220120 10:45:21.707" endtime="20220120 10:45:21.878"/>
</test>
<test id="s1-s1-s9-s2-t15" name="Nested List with a string value with brackets">
<kw name="Create List" library="BuiltIn">
<var>@{Level 3}</var>
<arg>alpha</arg>
<arg>beta</arg>
<arg>gamma</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.881" level="INFO">@{Level 3} = [ alpha | beta | gamma ]</msg>
<status status="PASS" starttime="20220120 10:45:21.881" endtime="20220120 10:45:21.881"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Level 2}</var>
<arg>A</arg>
<arg>B</arg>
<arg>${Level 3}</arg>
<arg>${Some string with last bracket}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.882" level="INFO">@{Level 2} = [ A | B | ['alpha', 'beta', 'gamma'] | Saarbrücken Hbf - Neubrücke [Nahe] ]</msg>
<status status="PASS" starttime="20220120 10:45:21.882" endtime="20220120 10:45:21.882"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{expected}</var>
<arg>${1}</arg>
<arg>${2}</arg>
<arg>${Level 2}</arg>
<arg>${3}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220120 10:45:21.884" level="INFO">@{expected} = [ 1 | 2 | ['A', 'B', ['alpha', 'beta', 'gamma'], 'Saarbrücken Hbf - Neubrücke [Nahe]'] | 3 ]</msg>
<status status="PASS" starttime="20220120 10:45:21.883" endtime="20220120 10:45:21.884"/>
</kw>
<kw name="Log List" library="Collections">
<arg>${expected}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<msg timestamp="20220120 10:45:21.885" level="INFO">List length is 4 and it contains following items:
0: 1
1: 2
2: ['A', 'B', ['alpha', 'beta', 'gamma'], 'Saarbrücken Hbf - Neubrücke [Nahe]']
3: 3</msg>
<status status="PASS" starttime="20220120 10:45:21.884" endtime="20220120 10:45:21.885"/>
</kw>
<kw name="Lists.return Nested List With String Inside" library="EggplantLibrary">
<var>${l}</var>
<arg>${Some string with last bracket}</arg>
<msg timestamp="20220120 10:45:21.885" level="INFO">Send command to eggPlant server: 'RunWithNewResults "Lists/returnNestedListWithStringInside", "Saarbrücken Hbf - Neubrücke [Nahe]",'</msg>
<msg timestamp="20220120 10:45:22.036" level="INFO">Execution duration: 0.144999980927</msg>
<msg timestamp="20220120 10:45:22.036" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:22.036" level="INFO" html="true">20.01.22, 09:45:21	START		Running Lists/returnNestedListWithStringInside.script
20.01.22, 09:45:21	EndTestCase		(Duration:"0.002", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:21 +0000", Successes:"1", TestCase:"Lists/returnNestedListWithStringInside.script", Warnings:"0")
20.01.22, 09:45:21	SUCCESS		Execution Time 0:00:00 Lists/returnNestedListWithStringInside.script
</msg>
<msg timestamp="20220120 10:45:22.036" level="INFO">Return value: [1,2,["A","B",["alpha","beta","gamma"],"Saarbrücken Hbf - Neubrücke [Nahe]"],3]</msg>
<msg timestamp="20220120 10:45:22.037" level="INFO">${l} = [1, 2, ['A', 'B', ['alpha', 'beta', 'gamma'], 'Saarbrücken Hbf - Neubrücke [Nahe]'], 3]</msg>
<status status="PASS" starttime="20220120 10:45:21.885" endtime="20220120 10:45:22.037"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${l}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:22.037" endtime="20220120 10:45:22.038"/>
</kw>
<status status="PASS" starttime="20220120 10:45:21.879" endtime="20220120 10:45:22.038"/>
</test>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:45:22.040" endtime="20220120 10:45:22.066"/>
</kw>
<doc>Tests for lists with new formatting (square brackets) - since eggPlant 20.1.0.</doc>
<status status="PASS" starttime="20220120 10:45:17.702" endtime="20220120 10:45:22.066"/>
</suite>
<suite id="s1-s1-s9-s3" name="SimpleValues" source="D:\DEV\robotframework-eggplant\tests\tests\Return\SimpleValues.robot">
<kw name="Open Session" library="EggplantLibrary" type="SETUP">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:45:22.136" level="INFO">Send command to eggPlant server: 'if EggplantVersion().eggplant &lt; "21.1.0" then LogWarning !"Incompatible eggplant version detected - [[EggplantVersion().eggplant]]. Min. version required - 21.1.0. See README for more information."'</msg>
<msg timestamp="20220120 10:45:22.170" level="INFO">Execution duration: 0.00100004673</msg>
<msg timestamp="20220120 10:45:22.170" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:22.170" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:22.170" level="INFO">Return value: {'Duration': 0.008000016212, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/Lists/returnNestedListWithStringInside/20220120_094521.926/LogFile.txt', 'ReturnValue': '[1,2,["A","B",["alpha","beta","gamma"],"Saarbrücken Hbf - Neubrücke [Nahe]"],3]', 'RunDate': &lt;DateTime '20220120T09:45:21' at 0x2cea9bac640&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<status status="PASS" starttime="20220120 10:45:22.074" endtime="20220120 10:45:22.170"/>
</kw>
<test id="s1-s1-s9-s3-t1" name="String Return">
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${s}</var>
<arg>${Simple string}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:22.171" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", "Ös this a real life?)",'</msg>
<msg timestamp="20220120 10:45:22.785" level="INFO">Execution duration: 0.583999991417</msg>
<msg timestamp="20220120 10:45:22.785" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:22.785" level="INFO" html="true">20.01.22, 09:45:22	START		Running returnTheSameValue.script
20.01.22, 09:45:22	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:22 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:22	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:22.785" level="INFO">Return value: Ös this a real life?)</msg>
<msg timestamp="20220120 10:45:22.786" level="INFO">${s} = Ös this a real life?)</msg>
<status status="PASS" starttime="20220120 10:45:22.170" endtime="20220120 10:45:22.786"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${s}</arg>
<arg>${Simple string}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:22.786" endtime="20220120 10:45:22.787"/>
</kw>
<status status="PASS" starttime="20220120 10:45:22.170" endtime="20220120 10:45:22.787"/>
</test>
<test id="s1-s1-s9-s3-t2" name="Return string with comma">
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${s}</var>
<arg>${string with comma}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:22.789" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", "LBZS SDB09A / LL-DH, DN-DH",'</msg>
<msg timestamp="20220120 10:45:23.419" level="INFO">Execution duration: 0.601999998093</msg>
<msg timestamp="20220120 10:45:23.419" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:23.419" level="INFO" html="true">20.01.22, 09:45:23	START		Running returnTheSameValue.script
20.01.22, 09:45:23	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:23 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:23	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:23.419" level="INFO">Return value: LBZS SDB09A / LL-DH, DN-DH</msg>
<msg timestamp="20220120 10:45:23.419" level="INFO">${s} = LBZS SDB09A / LL-DH, DN-DH</msg>
<status status="PASS" starttime="20220120 10:45:22.789" endtime="20220120 10:45:23.419"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${s}</arg>
<arg>${string with comma}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:23.420" endtime="20220120 10:45:23.420"/>
</kw>
<status status="PASS" starttime="20220120 10:45:22.788" endtime="20220120 10:45:23.421"/>
</test>
<test id="s1-s1-s9-s3-t3" name="Return string with space">
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${s}</var>
<arg>${string with space}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:23.423" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", " LBZS SDB09A / LL-DH, DN-DH ",'</msg>
<msg timestamp="20220120 10:45:24.058" level="INFO">Execution duration: 0.606999993324</msg>
<msg timestamp="20220120 10:45:24.058" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:24.058" level="INFO" html="true">20.01.22, 09:45:23	START		Running returnTheSameValue.script
20.01.22, 09:45:23	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:23 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:23	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:24.059" level="INFO">Return value:  LBZS SDB09A / LL-DH, DN-DH </msg>
<msg timestamp="20220120 10:45:24.059" level="INFO">${s} =  LBZS SDB09A / LL-DH, DN-DH </msg>
<status status="PASS" starttime="20220120 10:45:23.423" endtime="20220120 10:45:24.059"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${s}</arg>
<arg>${string with space}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:24.059" endtime="20220120 10:45:24.060"/>
</kw>
<status status="PASS" starttime="20220120 10:45:23.422" endtime="20220120 10:45:24.061"/>
</test>
<test id="s1-s1-s9-s3-t4" name="Integer Return">
<kw name="Log" library="BuiltIn">
<arg>${123}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220120 10:45:24.064" level="INFO">123</msg>
<status status="PASS" starttime="20220120 10:45:24.064" endtime="20220120 10:45:24.064"/>
</kw>
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${x}</var>
<arg>${123}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:24.065" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", 123,'</msg>
<msg timestamp="20220120 10:45:24.566" level="INFO">Execution duration: 0.480999946594</msg>
<msg timestamp="20220120 10:45:24.566" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:24.566" level="INFO" html="true">20.01.22, 09:45:24	START		Running returnTheSameValue.script
20.01.22, 09:45:24	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:24 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:24	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:24.566" level="INFO">Return value: 123</msg>
<msg timestamp="20220120 10:45:24.566" level="INFO">${x} = 123</msg>
<status status="PASS" starttime="20220120 10:45:24.065" endtime="20220120 10:45:24.566"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${x}</arg>
<arg>${123}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:24.566" endtime="20220120 10:45:24.567"/>
</kw>
<status status="PASS" starttime="20220120 10:45:24.062" endtime="20220120 10:45:24.568"/>
</test>
<test id="s1-s1-s9-s3-t5" name="Bool return">
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${x}</var>
<arg>${TRUE}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:24.570" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", True,'</msg>
<msg timestamp="20220120 10:45:25.235" level="INFO">Execution duration: 0.636000037193</msg>
<msg timestamp="20220120 10:45:25.235" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:25.235" level="INFO" html="true">20.01.22, 09:45:25	START		Running returnTheSameValue.script
20.01.22, 09:45:25	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:25 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:25	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:25.235" level="INFO">Return value: True</msg>
<msg timestamp="20220120 10:45:25.235" level="INFO">${x} = True</msg>
<status status="PASS" starttime="20220120 10:45:24.570" endtime="20220120 10:45:25.235"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${x}</arg>
<arg>${TRUE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:25.236" endtime="20220120 10:45:25.236"/>
</kw>
<status status="PASS" starttime="20220120 10:45:24.569" endtime="20220120 10:45:25.237"/>
</test>
<test id="s1-s1-s9-s3-t6" name="Float Return">
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${x}</var>
<arg>${1.99}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:25.239" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", 1.99,'</msg>
<msg timestamp="20220120 10:45:25.726" level="INFO">Execution duration: 0.463999986649</msg>
<msg timestamp="20220120 10:45:25.726" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:25.726" level="INFO" html="true">20.01.22, 09:45:25	START		Running returnTheSameValue.script
20.01.22, 09:45:25	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:25 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:25	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:25.726" level="INFO">Return value: 1.99</msg>
<msg timestamp="20220120 10:45:25.726" level="INFO">${x} = 1.99</msg>
<status status="PASS" starttime="20220120 10:45:25.239" endtime="20220120 10:45:25.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${x}</arg>
<arg>${1.99}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:25.727" endtime="20220120 10:45:25.727"/>
</kw>
<status status="PASS" starttime="20220120 10:45:25.238" endtime="20220120 10:45:25.728"/>
</test>
<test id="s1-s1-s9-s3-t7" name="Empty Return">
<kw name="Return The Same Value" library="EggplantLibrary">
<var>${x}</var>
<arg>${EMPTY}</arg>
<doc>Just returns the given string back</doc>
<msg timestamp="20220120 10:45:25.730" level="INFO">Send command to eggPlant server: 'RunWithNewResults "returnTheSameValue", "",'</msg>
<msg timestamp="20220120 10:45:26.419" level="INFO">Execution duration: 0.65600001812</msg>
<msg timestamp="20220120 10:45:26.419" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:26.419" level="INFO" html="true">20.01.22, 09:45:26	START		Running returnTheSameValue.script
20.01.22, 09:45:26	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:26 +0000", Successes:"1", TestCase:"returnTheSameValue.script", Warnings:"0")
20.01.22, 09:45:26	SUCCESS		Execution Time 0:00:00 returnTheSameValue.script
</msg>
<msg timestamp="20220120 10:45:26.420" level="INFO">Return value: </msg>
<msg timestamp="20220120 10:45:26.420" level="INFO">${x} = </msg>
<status status="PASS" starttime="20220120 10:45:25.730" endtime="20220120 10:45:26.420"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${x}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:26.420" endtime="20220120 10:45:26.421"/>
</kw>
<status status="PASS" starttime="20220120 10:45:25.729" endtime="20220120 10:45:26.421"/>
</test>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:45:26.423" endtime="20220120 10:45:26.462"/>
</kw>
<status status="PASS" starttime="20220120 10:45:22.070" endtime="20220120 10:45:26.462"/>
</suite>
<status status="PASS" starttime="20220120 10:45:13.637" endtime="20220120 10:45:26.465"/>
</suite>
<suite id="s1-s1-s10" name="Screenshot" source="D:\DEV\robotframework-eggplant\tests\tests\Screenshot.robot">
<kw name="Open Session" library="EggplantLibrary" type="SETUP">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:45:26.528" level="INFO">Send command to eggPlant server: 'if EggplantVersion().eggplant &lt; "21.1.0" then LogWarning !"Incompatible eggplant version detected - [[EggplantVersion().eggplant]]. Min. version required - 21.1.0. See README for more information."'</msg>
<msg timestamp="20220120 10:45:26.567" level="INFO">Execution duration: 0.000999927521</msg>
<msg timestamp="20220120 10:45:26.567" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:26.567" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:26.567" level="INFO">Return value: {'Duration': 0.006999969482, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/returnTheSameValue/20220120_094526.197/LogFile.txt', 'ReturnValue': '', 'RunDate': &lt;DateTime '20220120T09:45:26' at 0x2cea9fadb50&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<status status="PASS" starttime="20220120 10:45:26.473" endtime="20220120 10:45:26.567"/>
</kw>
<test id="s1-s1-s10-t1" name="Simple Fullscreen Screenshot">
<kw name="Connect Screenshot SUT" library="common" type="SETUP">
<kw name="Connect Sut" library="EggplantLibrary">
<arg>{Type:"screenshot", name:"${SUT screenshot file}"}</arg>
<doc>Opens a VNC or RDP connection with a SUT / makes it the active connection.</doc>
<msg timestamp="20220120 10:45:26.568" level="INFO">Send command to eggPlant server: 'connect {Type:"screenshot", name:"D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png"}'</msg>
<msg timestamp="20220120 10:45:26.599" level="INFO">Execution duration: 0.003000020981</msg>
<msg timestamp="20220120 10:45:26.599" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:26.600" level="INFO" html="true">20.01.22, 09:45:26	connect		D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png:(null)
</msg>
<msg timestamp="20220120 10:45:26.600" level="INFO">Return value: {'Duration': 0.006999969482, 'Errors': 0.0, 'Exceptions': 0.0, 'LogFile': 'D:/DEV/robotframework-eggplant/tests/keywords/eggPlantScripts/SuiteOne.suite/Results/returnTheSameValue/20220120_094526.197/LogFile.txt', 'ReturnValue': '', 'RunDate': &lt;DateTime '20220120T09:45:26' at 0x2cea9cec970&gt;, 'Status': 'Success', 'Successes': 1.0, 'Warnings': 0.0}</msg>
<status status="PASS" starttime="20220120 10:45:26.568" endtime="20220120 10:45:26.600"/>
</kw>
<status status="PASS" starttime="20220120 10:45:26.568" endtime="20220120 10:45:26.600"/>
</kw>
<kw name="Screenshot" library="EggplantLibrary">
<doc>Captures a SUT screen image, saves it into the specified file and logs in the Robot test log.
By default the full screen is captured, otherwise according to the specified rectangle.</doc>
<msg timestamp="20220120 10:45:26.601" level="INFO">Screenshot rectangle: Full screen</msg>
<msg timestamp="20220120 10:45:26.849" level="INFO" html="true">Screenshot: &lt;a href="Screenshots\Screenshot__2022-01-20__10_45_26__599953.png"&gt;Screenshot__2022-01-20__10_45_26__599953.png&lt;/a&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots\Screenshot__2022-01-20__10_45_26__599953.png"&gt;&lt;img src="Screenshots\Screenshot__2022-01-20__10_45_26__599953.png" height="350px"&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</msg>
<status status="PASS" starttime="20220120 10:45:26.600" endtime="20220120 10:45:26.849"/>
</kw>
<status status="PASS" starttime="20220120 10:45:26.567" endtime="20220120 10:45:26.850"/>
</test>
<test id="s1-s1-s10-t2" name="Screenshot with a rectangle">
<kw name="Connect Screenshot SUT" library="common" type="SETUP">
<kw name="Connect Sut" library="EggplantLibrary">
<arg>{Type:"screenshot", name:"${SUT screenshot file}"}</arg>
<doc>Opens a VNC or RDP connection with a SUT / makes it the active connection.</doc>
<msg timestamp="20220120 10:45:26.853" level="INFO">Send command to eggPlant server: 'connect {Type:"screenshot", name:"D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png"}'</msg>
<msg timestamp="20220120 10:45:26.882" level="INFO">Execution duration: 0.005999922752</msg>
<msg timestamp="20220120 10:45:26.882" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:26.882" level="INFO" html="true">20.01.22, 09:45:26	connect		D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png:(null)
</msg>
<msg timestamp="20220120 10:45:26.882" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_26__599953.png</msg>
<status status="PASS" starttime="20220120 10:45:26.852" endtime="20220120 10:45:26.882"/>
</kw>
<status status="PASS" starttime="20220120 10:45:26.852" endtime="20220120 10:45:26.883"/>
</kw>
<kw name="Screenshot" library="EggplantLibrary">
<arg>@{MyRect1}</arg>
<doc>Captures a SUT screen image, saves it into the specified file and logs in the Robot test log.
By default the full screen is captured, otherwise according to the specified rectangle.</doc>
<msg timestamp="20220120 10:45:26.884" level="INFO">Screenshot rectangle: (100, 100),(200, 200)</msg>
<msg timestamp="20220120 10:45:26.971" level="INFO" html="true">Screenshot: &lt;a href="Screenshots\Screenshot__2022-01-20__10_45_26__883495.png"&gt;Screenshot__2022-01-20__10_45_26__883495.png&lt;/a&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots\Screenshot__2022-01-20__10_45_26__883495.png"&gt;&lt;img src="Screenshots\Screenshot__2022-01-20__10_45_26__883495.png" height="350px"&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</msg>
<status status="PASS" starttime="20220120 10:45:26.883" endtime="20220120 10:45:26.971"/>
</kw>
<kw name="Screenshot" library="EggplantLibrary">
<arg>@{MyRect2}</arg>
<doc>Captures a SUT screen image, saves it into the specified file and logs in the Robot test log.
By default the full screen is captured, otherwise according to the specified rectangle.</doc>
<msg timestamp="20220120 10:45:26.972" level="INFO">Screenshot rectangle: (0, 0),(500, 500)</msg>
<msg timestamp="20220120 10:45:27.059" level="INFO" html="true">Screenshot: &lt;a href="Screenshots\Screenshot__2022-01-20__10_45_26__972254.png"&gt;Screenshot__2022-01-20__10_45_26__972254.png&lt;/a&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots\Screenshot__2022-01-20__10_45_26__972254.png"&gt;&lt;img src="Screenshots\Screenshot__2022-01-20__10_45_26__972254.png" height="350px"&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</msg>
<status status="PASS" starttime="20220120 10:45:26.972" endtime="20220120 10:45:27.059"/>
</kw>
<status status="PASS" starttime="20220120 10:45:26.851" endtime="20220120 10:45:27.060"/>
</test>
<test id="s1-s1-s10-t3" name="Fullscreen with area highlighting">
<kw name="Connect Screenshot SUT" library="common" type="SETUP">
<kw name="Connect Sut" library="EggplantLibrary">
<arg>{Type:"screenshot", name:"${SUT screenshot file}"}</arg>
<doc>Opens a VNC or RDP connection with a SUT / makes it the active connection.</doc>
<msg timestamp="20220120 10:45:27.063" level="INFO">Send command to eggPlant server: 'connect {Type:"screenshot", name:"D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png"}'</msg>
<msg timestamp="20220120 10:45:27.080" level="INFO">Execution duration: 0.003000020981</msg>
<msg timestamp="20220120 10:45:27.080" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:27.080" level="INFO" html="true">20.01.22, 09:45:27	connect		D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png:(null)
</msg>
<msg timestamp="20220120 10:45:27.080" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_26__972254.png</msg>
<status status="PASS" starttime="20220120 10:45:27.063" endtime="20220120 10:45:27.080"/>
</kw>
<status status="PASS" starttime="20220120 10:45:27.062" endtime="20220120 10:45:27.080"/>
</kw>
<kw name="Screenshot" library="EggplantLibrary">
<arg>highlight_rectangle=${MyRect2}</arg>
<doc>Captures a SUT screen image, saves it into the specified file and logs in the Robot test log.
By default the full screen is captured, otherwise according to the specified rectangle.</doc>
<msg timestamp="20220120 10:45:27.081" level="INFO">Screenshot rectangle: Full screen</msg>
<msg timestamp="20220120 10:45:27.299" level="INFO">['(0, 0),(500, 500)']</msg>
<msg timestamp="20220120 10:45:27.501" level="INFO" html="true">Screenshot: &lt;a href="Screenshots\Screenshot__2022-01-20__10_45_27__080962.png"&gt;Screenshot__2022-01-20__10_45_27__080962.png&lt;/a&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots\Screenshot__2022-01-20__10_45_27__080962.png"&gt;&lt;img src="Screenshots\Screenshot__2022-01-20__10_45_27__080962.png" height="350px"&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;</msg>
<status status="PASS" starttime="20220120 10:45:27.081" endtime="20220120 10:45:27.501"/>
</kw>
<status status="PASS" starttime="20220120 10:45:27.061" endtime="20220120 10:45:27.502"/>
</test>
<test id="s1-s1-s10-t4" name="Screenshot taking error if no SUT connected">
<kw name="Disconnect Screenshot SUT" library="common" type="SETUP">
<kw name="Disconnect Sut" library="EggplantLibrary">
<arg>{Type:"screenshot", name:"${SUT screenshot file}"}</arg>
<doc>Closes the specified VNC or RDP connection with a SUT.</doc>
<msg timestamp="20220120 10:45:27.504" level="INFO">Send command to eggPlant server: 'disconnect {Type:"screenshot", name:"D:\DEV\robotframework-eggplant\tests\keywords/../SUT-Screenshot.png"}'</msg>
<msg timestamp="20220120 10:45:27.663" level="INFO">Execution duration: 0.15499997139</msg>
<msg timestamp="20220120 10:45:27.663" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:27.663" level="INFO" html="true">20.01.22, 09:45:27	disconnect		SUT-Screenshot.png – D:\DEV\robotframework-eggplant\tests\keywords/..
</msg>
<msg timestamp="20220120 10:45:27.663" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_27__080962.png</msg>
<status status="PASS" starttime="20220120 10:45:27.504" endtime="20220120 10:45:27.663"/>
</kw>
<status status="PASS" starttime="20220120 10:45:27.504" endtime="20220120 10:45:27.663"/>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<arg>*Unable to take screenshot - no SUT connection available</arg>
<arg>Screenshot</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="Screenshot" library="EggplantLibrary">
<doc>Captures a SUT screen image, saves it into the specified file and logs in the Robot test log.
By default the full screen is captured, otherwise according to the specified rectangle.</doc>
<msg timestamp="20220120 10:45:27.664" level="INFO">Screenshot rectangle: Full screen</msg>
<msg timestamp="20220120 10:45:27.700" level="FAIL">EggplantExecutionException: Unable to take screenshot - no SUT connection available</msg>
<status status="FAIL" starttime="20220120 10:45:27.664" endtime="20220120 10:45:27.700"/>
</kw>
<status status="PASS" starttime="20220120 10:45:27.664" endtime="20220120 10:45:27.700"/>
</kw>
<status status="PASS" starttime="20220120 10:45:27.503" endtime="20220120 10:45:27.701"/>
</test>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:45:27.702" endtime="20220120 10:45:27.717"/>
</kw>
<status status="PASS" starttime="20220120 10:45:26.468" endtime="20220120 10:45:27.717"/>
</suite>
<suite id="s1-s1-s11" name="Subfolders" source="D:\DEV\robotframework-eggplant\tests\tests\Subfolders.robot">
<kw name="Open Session" library="EggplantLibrary" type="SETUP">
<doc>Opens a session with the specified eggPlant Suite.
Has to be called before test execution.
The keyword also checks current eggpPant version and logs a warning in case of incompatibility.</doc>
<msg timestamp="20220120 10:45:27.784" level="INFO">Send command to eggPlant server: 'if EggplantVersion().eggplant &lt; "21.1.0" then LogWarning !"Incompatible eggplant version detected - [[EggplantVersion().eggplant]]. Min. version required - 21.1.0. See README for more information."'</msg>
<msg timestamp="20220120 10:45:27.824" level="INFO">Execution duration: 0.000999927521</msg>
<msg timestamp="20220120 10:45:27.824" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:27.824" level="INFO" html="true"/>
<msg timestamp="20220120 10:45:27.824" level="INFO">Return value: D:/DEV/robotframework-eggplant/out/Screenshots/Screenshot__2022-01-20__10_45_27__080962.png</msg>
<status status="PASS" starttime="20220120 10:45:27.724" endtime="20220120 10:45:27.824"/>
</kw>
<test id="s1-s1-s11-t1" name="Subfolders - 1 level deep">
<kw name="Some Submodule.echo" library="EggplantLibrary">
<var>${result}</var>
<arg>${input}</arg>
<doc> Returns the argument</doc>
<msg timestamp="20220120 10:45:27.825" level="INFO">Send command to eggPlant server: 'RunWithNewResults "SomeSubmodule/echo", "hello",'</msg>
<msg timestamp="20220120 10:45:28.025" level="INFO">Execution duration: 0.169000029564</msg>
<msg timestamp="20220120 10:45:28.025" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:28.025" level="INFO" html="true">20.01.22, 09:45:27	START		Running SomeSubmodule/echo.script
20.01.22, 09:45:27	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:27 +0000", Successes:"1", TestCase:"SomeSubmodule/echo.script", Warnings:"0")
20.01.22, 09:45:27	SUCCESS		Execution Time 0:00:00 SomeSubmodule/echo.script
</msg>
<msg timestamp="20220120 10:45:28.025" level="INFO">Return value: hello</msg>
<msg timestamp="20220120 10:45:28.025" level="INFO">${result} = hello</msg>
<status status="PASS" starttime="20220120 10:45:27.825" endtime="20220120 10:45:28.025"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${input}</arg>
<arg>${result}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:28.026" endtime="20220120 10:45:28.026"/>
</kw>
<status status="PASS" starttime="20220120 10:45:27.824" endtime="20220120 10:45:28.026"/>
</test>
<test id="s1-s1-s11-t2" name="Subfolders - 2 levels deep">
<kw name="Some Submodule. One More Sub Submodule.echo" library="EggplantLibrary">
<var>${result}</var>
<arg>${input}</arg>
<doc> Returns the argument</doc>
<msg timestamp="20220120 10:45:28.028" level="INFO">Send command to eggPlant server: 'RunWithNewResults "SomeSubmodule/OneMoreSubSubmodule/echo", "hello",'</msg>
<msg timestamp="20220120 10:45:28.190" level="INFO">Execution duration: 0.138000011444</msg>
<msg timestamp="20220120 10:45:28.190" level="INFO">Command output:</msg>
<msg timestamp="20220120 10:45:28.190" level="INFO" html="true">20.01.22, 09:45:28	START		Running SomeSubmodule/OneMoreSubSubmodule/echo.script
20.01.22, 09:45:28	EndTestCase		(Duration:"0.001", Errors:"0", Exceptions:"0", StartTime:"2022-01-20 09:45:28 +0000", Successes:"1", TestCase:"SomeSubmodule/OneMoreSubSubmodule/echo.script", Warnings:"0")
20.01.22, 09:45:28	SUCCESS		Execution Time 0:00:00 SomeSubmodule/OneMoreSubSubmodule/echo.script
</msg>
<msg timestamp="20220120 10:45:28.190" level="INFO">Return value: hello</msg>
<msg timestamp="20220120 10:45:28.190" level="INFO">${result} = hello</msg>
<status status="PASS" starttime="20220120 10:45:28.028" endtime="20220120 10:45:28.190"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${input}</arg>
<arg>${result}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220120 10:45:28.191" endtime="20220120 10:45:28.191"/>
</kw>
<status status="PASS" starttime="20220120 10:45:28.027" endtime="20220120 10:45:28.192"/>
</test>
<kw name="Close Session" library="EggplantLibrary" type="TEARDOWN">
<doc>Closes the session with the specified eggPlant Suite.
Has to be called after test execution before opening a new session with the same eggPlant Suite.
If the requested session is not open, a warning is logged.</doc>
<status status="PASS" starttime="20220120 10:45:28.193" endtime="20220120 10:45:28.210"/>
</kw>
<status status="PASS" starttime="20220120 10:45:27.719" endtime="20220120 10:45:28.210"/>
</suite>
<status status="PASS" starttime="20220120 10:44:24.025" endtime="20220120 10:45:28.214"/>
</suite>
<status status="PASS" starttime="20220120 10:44:24.000" endtime="20220120 10:45:28.223"/>
</suite>
<statistics>
<total>
<stat pass="82" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="82" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="82" fail="0" skip="0" id="s1-s1" name="Tests">Tests.Tests</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Comments">Tests.Tests.Comments</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s2" name="Connection">Tests.Tests.Connection</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s3" name="DebugInfo">Tests.Tests.DebugInfo</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s4" name="Errors">Tests.Tests.Errors</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Logging">Tests.Tests.Logging</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s6" name="Movie">Tests.Tests.Movie</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1-s7" name="Params">Tests.Tests.Params</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s8" name="Params Named Default">Tests.Tests.Params Named Default</stat>
<stat pass="37" fail="0" skip="0" id="s1-s1-s9" name="Return">Tests.Tests.Return</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1-s9-s1" name="LegacyLists">Tests.Tests.Return.LegacyLists</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1-s9-s2" name="Lists">Tests.Tests.Return.Lists</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s9-s3" name="SimpleValues">Tests.Tests.Return.SimpleValues</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s10" name="Screenshot">Tests.Tests.Screenshot</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s11" name="Subfolders">Tests.Tests.Subfolders</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20220120 10:44:24.915" level="WARN">Keyword 'EggplantLibrary.Deprecated Keyword' is deprecated. - use `listParams` instead
This keyword is deprecated - so RF log should contain a warning about it</msg>
<msg timestamp="20220120 10:45:01.142" level="WARN">This message should appear as warning!</msg>
</errors>
</robot>
